<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="PROJECT_DIR" elementType="Argument">
            <stringProp name="Argument.name">PROJECT_DIR</stringProp>
            <stringProp name="Argument.value">${__BeanShell(import org.apache.jmeter.services.FileServer; FileServer   .getFileServer().getBaseDir();)}${__BeanShell(File.separator,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="JPET_STORE_URL" elementType="Argument">
            <stringProp name="Argument.name">JPET_STORE_URL</stringProp>
            <stringProp name="Argument.value">petstore.octoperf.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DETAILS_LIST" elementType="Argument">
            <stringProp name="Argument.name">DETAILS_LIST</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.value">Details_list.csv</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
    </TestPlan>
    <hashTree>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">true</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">true</boolProp>
      </CacheManager>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </SetupThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="CSV_File" enabled="true">
          <stringProp name="BeanShellSampler.query">_project_dir = vars.get(&quot;PROJECT_DIR&quot;);
_details_list = vars.get(&quot;DETAILS_LIST&quot;);

_file_path = _project_dir + _details_list;
File _input_file = new File(_file_path);
is_file_created = _input_file.createNewFile();

FileWriter _file_writer = new FileWriter(_input_file);
BufferedWriter _buffered_writer =new BufferedWriter(_file_writer);
_buffered_writer.write(&quot;User,OrderType,PetName,CategoryID,Itemid,Price,cardtype&quot;);
_buffered_writer.close();
_file_writer.close();</stringProp>
        </BeanShellSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
        <stringProp name="ThreadGroup.num_threads">${__P(threads,5)}</stringProp>
        <intProp name="ThreadGroup.ramp_time">10</intProp>
        <longProp name="ThreadGroup.duration">120</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request">
            <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:51:03.394</stringProp>
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${JPET_STORE_URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:51:03.395</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action" enabled="true">
            <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:53:11.025</stringProp>
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:53:11.025</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-270" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${JPET_STORE_URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.google.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:53:11.025</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Account.action-282" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${JPET_STORE_URL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="signonForm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">signonForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="C_sourcePage_value" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">C_sourcePage</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;_sourcePage&quot; value=&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">C_sourcePage</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="C__fp_value" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">C__fp</stringProp>
              <stringProp name="BoundaryExtractor.lboundary"> name=&quot;__fp&quot; value=&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">C__fp</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:53:11.025</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/canonical.html-283" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/canonical.html</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/success.txt-285" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/success.txt</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipv6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ipv6</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/success.txt-284" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/success.txt</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipv4" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ipv4</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Account.action-286" enabled="true">
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${JPET_STORE_URL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">j2ee</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">j2ee</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="signon" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">signon</stringProp>
                  <stringProp name="Argument.value">Login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_sourcePage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_sourcePage</stringProp>
                  <stringProp name="Argument.value">${C_sourcePage}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">__fp</stringProp>
                  <stringProp name="Argument.value">${C__fp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="C_Username" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">C_Username</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">Welcome </stringProp>
              <stringProp name="BoundaryExtractor.rboundary">!</stringProp>
              <stringProp name="BoundaryExtractor.default">C_Username</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:53:11.025</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-287" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${JPET_STORE_URL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="C_categoryId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">C_categoryId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&amp;categoryId=</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot; shape=&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">C_categoryId</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">0</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:53:11.025</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/firefox-desktop/pageload/1/66166cfc-8061-4446-954e-e033ff2d0e4c-288" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/firefox-desktop/pageload/1/66166cfc-8061-4446-954e-e033ff2d0e4c</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f; &#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;  Yێ 6&#x10; &#x17; 6Z ~ [&#x1f;  )Ц CQ&#x18;Z k +K $ A  # vd  Jk&#x17;X$0M&#xe;g    _ *+  x(  ר1_ &#x15;A&#x1f;  M v f{&#x13; &quot; &#x8; &#x11;    Պ &#x15;&amp;w&#x8; &#x1f;&#x10; &#xf;ч &#x14;  V&#x15;# m d  B 6IS&#x16;   զٕyڝ&#x7f; L&#xd;狶 H S 1 &gt;  I  E   MU y ݵM\ } &#x15; u\  ! [ c uRlv h   Y m t߶ U _   &#xf;      F߾    ~     ӦyR^ZS4 J3P&lt;  }U m     i  8 &#x1a;^ ) &#x16;  ]U 6^!  &#x1b; 2 Ҥ5iܘ &#x6;&#x14;` ! &#x1e;    s   -+ &lt;O&#xe;   ޗ i tp$[&#x13; e\ &#xf;&#x0;J     [&#x10;p=. &#xd;
pO  X \&#x18;&#x1d;   q[  &quot;=T&#x1d;X )   ć   ɢ &#x15; -y&#x1f;   1 @ h7&#x17;    yw   &#xf;Ym&#x1e;ʗ&#x18;|Rv os3&gt; &#x11;&apos; v ɼ v&#x0;   K- \ Ps&#xb;&#x4;7  )&#xb;  x &#x1e;q  {&amp;F%hۚz&#x1f;wŤ VlkЎ O&amp;/7Y z   R gO ~&#xd;   &#x7; X# &#xc;&#xc;&gt;  &#x16;&#xc;ٛ ~]7     A&#x1d;[E&#x2;ݡ;&#xc;&#x12; º&#xb;&#x17;X Z&quot;[= g V  &#x7; /l&#x4; 6 &gt;&#x14; ͠; &#x11; 19  .5  l C  xQb-X Y Irc    &#x1d;&#x16;J  џY   Mw  ֛]R@ v z&#xc; ~  q&#x7;&#x15;&#x12;H` 5cV &#x1a;PilI 0 s&lt; fM &apos;  /   &gt; &#x17; &quot;  a&#x7f;oj !DPܕŧ   &#x5; A   ݃&#x1f;  l  m	  &quot;( &#xf;  Hl&#x7;  @  2 ȑ h` |&lt;T F 7&#x13;H  1 5Jaq&#x5f6;U f  E)   ; ӯ    GX&lt;4] {6 i  [&#x1f; ܂ &#x5;   @ &#x8;K E)  &amp; ,  &#x10;+A ( 0 HI Zja b 0Qrd ǟ&gt; &#xc;K 4k b6CL&#x1a; c]  6+ E 40͏a 9&#x7f; B*&#xf;  &quot;} +&#x19; @(  &lt;&#x10;ń  مLk n&#x8;&#x19;U  :&#xf;&#x14;d&#x3;H &#x15;  &#x1f; &#x1;BLP_ر { a z  &#xf;&#x1e;\ &#x12; q	&#x8;w]8 &#x17;   Y?&#xc;w   K #m  P+4 9D&#x13; | A    &#xd;t ֓ o 9&#xc;&lt;  &#xb;  &#x2; ۅ   K&#x0;9  x&quot; X t &#x14;     X/ % 0 KA  t &#x16; [ E  &#x13; *d[   `@_$  *1 = (  6&#xf;  =&amp; P&#x18;  Ioe&#x1a;B &#x3;) &#x3;? &#x17;5 LaL&#x11; P   P &#x11; K &#x19;&#x19;娫Ѵ*Js1 &#xe;  &#x14;O! &#x3;e&#x0;(  c  .  &quot; $ &#x5;&gt; 6&#x1b;c z&#x14;  ]&#xe;  &#x17;W yI @   Ap[  r  ;̫	 H. ӫ ܰaМ&#x1c; &#x19;S˫ P 57 3 &#xb;% ՟    2gSȁԱYRD 	&#x1e; X  &#x1b;x\&#x1b;  m&#x18;b g  m ,  T!|þ&#xf; &#x12; !i  &gt;vy&#xf; &#x19; $ &#x3; &#x7f;v&lt; &#x1; \͍&#x12;L1  gP 4w &#x19;F(  \ 0  m &#x12; (0 =\H z&#x6; :   J&#xd;  &#x11;I v BE  ܉ SL &#x6;F nȫ d &apos;@  SYF?op   4t# 1\ Nng   n,&#x1c; &#x8;̰&#x3; %VӶh  e&#xe;K }Ӊr 5o{ ,G&#x1c;   &amp; i&#xd;
   	 &#x7;ǭӔ&apos;  |i6	,  p; ͛ &#x14;&#x17;&gt;&#x17; O AF&#x3;[ u  &#x17;&#xd;
 fҘ&#x0;;s&#x18;0 f&lt; &#x8;5Y 8VT&#xb;&#x17;&#x8; &#x11;&#x13;Wtt&#x1f;w&#x15; $; &quot;QZ Fbek &lt;    &#x13; &#x1;    ͦ% ^&#x6;    &#xc;TdLY e   # 4=r Y   &#x7; ג{ (  Ԭ   qT&#xd;
 !xǂ&#x1c; %&#x12;Z  y&#x16;={g H  } O &#x11;&#xe;Z 9, K&quot;&#x18;   Ð&#xf;q qE&#x1c;f	u2 - &#x6; ;&#x13;D&#xd;
@ E&#x6; ;&quot;W X&#x1e;z &#xf;k&#x2;Um  b    $DN  w &#x4;) &gt;&#x2;ϙ˟~ Vk  xՙ `&#x7;&#x1c;; &#xf;) &#x7f;  xǿ H &gt;&#x16;&#xd;
   W&lt;&#x16;bN k &#x2;Z6 ZZyA &#x5; ;   z&#x19;  iR8&#x18; c6(4 O~&#x15;V  sE u Ǔ&#x1c;&quot;&#xc;爩  4&#x8;&#x1c; k  &#x3; `s   &quot;02   Y A&#x6;~ Zޠ]    @&#x7;s&#x10; za̓   Ub&#x18;h y  % &#x1;&#x3;        N M &#xf;^ݏ L    &#x1b; x8 &#x1a;)1   &#xd; jy-&#xd;
[% ك  N&#x18;R &#x17;^ B1 &#xb;   !  =&#x19;@ 7 b 9&#xb; o &#x7f;&#x7f; &#xf;Cf &#x1c; &amp;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="date" elementType="Header">
                  <stringProp name="Header.name">date</stringProp>
                  <stringProp name="Header.value">Sat, 03 Aug 2024 12:42:43 GMT</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="content-encoding" elementType="Header">
                  <stringProp name="Header.name">content-encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-telemetry-agent" elementType="Header">
                  <stringProp name="Header.name">x-telemetry-agent</stringProp>
                  <stringProp name="Header.value">Glean/60.0.1 (Rust on Windows)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Select_category" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-289" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${JPET_STORE_URL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="viewCategory" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">viewCategory</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="categoryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryId</stringProp>
                  <stringProp name="Argument.value">${C_categoryId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="C_Selected_category" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">C_Selected_Category</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&lt;h2&gt;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&lt;/h2&gt;</stringProp>
              <stringProp name="BoundaryExtractor.default">C_Selected_Pet</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">0</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="C_productId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">C_productId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&amp;amp;productId=</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;&gt;</stringProp>
              <stringProp name="BoundaryExtractor.default">C_productId</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">0</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:53:11.025</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Select_Product" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/search-290" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">www.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/search</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value">jpetstore</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-291" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">collector-hpn.ghostery.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">]   R !p?  #wC&#x16;a{7 ̄c&#x10;  +&#x17;#$ &#x8;遴G 9   &#x5;* &#x1d;R&amp;13 s  V&#xc;&#xc;r&#x14;+&#x19;;)&lt; G   &#x1d;bG\ &#x4;&#x10;ҳw&apos;K206s    _&#xb;5 &#xd; ̕ S&#xf;  A   n#i} [&#x1;&#x8; &#x2;&#x8;   V&#x12;) 2k _ o     &#x7;     Q&#x16;M &lt;c  &#x8;  ?Ud  Gw % &#xd;
 ;y } Ӌ + n &#x1;  xWXI 횔&#xb;L {  ڇy &#xd;
 n  &#x12;  .&#x6;R&#xd; \&#x16;  h+ k  &#x14;)  &#x8;&amp;&apos;&#x3; &#xc;&#x4;ȉ :  \ $ 2 l  &#x6;t_w ּn r] &#x4;z O  &#x1c;&#xb;1&#xd;&#xf;&#x14;XS =y&#x18;vgIh !=   ; ˪8&quot;   yR &#x0;8&lt;dQD  Z    &#x1;       ? $ [&#x1b;+X : &#x7f;| o&#xf;  &lt;&#x13;  P&#x1b; &#x19;b4    c OVJ HnX &#x1; &#x1f; :&quot;&#x1b;  O _ %+  0  iY mM&#x7f; &#x19;y cQZ  &#xb;  &#xc;&gt;%&#x4;[,Jq xh ?G]F &#x1a;&#x1e;^M( 3  &#x10;P?TU&#x1e; 3L.&#x3;&#x15;M &#xe; c F &#x16;&#x1f;Z   r&#x10;36v@ ֥ Mu &#xc; &#x14;F   w;  .&#x1e;T&#x1f;&amp; O&#xf; D &lt;&#x14;8g秏k 5 sX  i 0 &#x0;#NY. 5 P&#x1d; &#x1a;   a	h   J&apos; ǐL+J  + 1M6?   l u L &#xd;
`v+L{ &#x15;  Pʭ I  ?.wU dG&#x17;lC Ը 6  Y   &#x2;@|  WD&#xf; -W&#xc;  &#xd;  &#x12;Cs &#x2;   vn 2   Nj &#x4;B 0|bf F 4 K gW  &#x10; z z  C3   8&#xc;&quot; i&#x3;w  .vvV$Cv&#x2;       r 6   &#xf;gPA  XӾ:  &#x1e;O&#x12;  ao=&#x7f;   ]!&#xc;=t&#x18;r  坅 Z*v.BG &#xf;V&#x17; &#x2;&#xb;ho &#x7bf;   ؓp &#x13;?Ox 1L f  w  &#x13;  &gt;&#x10; Z iY} &#xe;  (F1 e  &gt;&#x2; }&#x1b;B&#x1d; A7 V&#x16; h B&#x14;  &#x18; &#x14;  W&#x14;    c ]E  &#x16;  id   YҲl   +tɦ ɲ}v&#x1c;j_  / uȟ*2   `j    wN)Z  :   #{&#xd;
P +^ ~X  @ p )&#x0; &#x1d; B &#x15;&quot;&gt;Tk =, 8 j y7cބ  &#xc;_ &#x0; &#xc;     T  &#x18;j,  &#x18;  ]\ A.&amp; J!&#x1a; ţ4 k  l촏 E+Z  &#x6;&#x10;df  W  &#x5f7;  d   &#x1b; &#x12;  d  Y &#x1f;   X  &#x1c;&#x1c; Z }&#x16;&gt;&#x0;  XW  &#x0;&#x10;  W e 9   Q =NVG&#x3;&#x2;   t&amp;$ , &#x1a;  [&#x1c; E&lt; ݥ j\   v   &#xd; &#x14; &#x1c;  q            O5  ~տ        &#x11;    &#xe;3&#xb;  %2  9  *  !o: &#xe;%*2 &#xc; &gt; D &#x4;  &#x17; = B Z w  Ot    b5 e FW  +r  %&#x1e;  ) f &#x1;z V x]g &#x0;c X   [ :jz4 aQ #L  ]&#x0;  C&#x4;ez &#x17; :   Cj   &#x3; n!   T } P T! 1  &#x15;\ L&#x1c;&lt;   	&#x1c;zL&#x2; &#x1d;&#x7fc; M  ʣ&#xd; ^o  D&lt; }  &#x7f;  ~sH   1e *{ 7}v  i  &#xc;   V5Wc,  C@h&#x15;S  3 &#xf; x&#x17;{    vB}VMй&#x7;S&#x0; r      o J &#x4;	    M   &#x3; c&#xf;   &#x3; D u I gZ&gt;    {!J  Ga x FA Ҳ   v O     )&#x8; &#x7f;{P&#x3;C3 e 4x&quot; q&#x17; &#x1d;  l  Z     ֦ y! &#xe; &#xd;
  Qb&quot;`  &#x1e;\d ~  &#x11;zA  N c-CI\  ( &#x1b; y G  0&#xc;93  &#x8;iN:  K ܗ  &#xd; EA &#x1e;  u &#x1a;zU  dCs&#x12;&#x1d;   	 ƚ  &#x6;&#xc;? ۺ&#x0;&#x15; &#xd; 65,&#x6; M &#x14; O &#xd;
 *  6}c s&#x17;&#x5;+)~-x V  FI&#xe;  8&#x14;{   \k &#x1d;\5  &gt; &#x3;܉    N&#x1;Š ~u &amp;n %i O    &#x16;   &#x1f;ޜ kq &#x16;  ¸  zUAM?A&#x1a;= &apos; &#x4;  ؒ GbU&#x2; &amp;]~&#x2;;   , *?	$7  ^n&#x3; 5 V  &#x10;%$`&gt;A b&#x4;C  e     _  K; = /  Jf:   &#xf;&gt;8   ]&gt;&#xc;  &#xc;  Rd   I  o 9O  ݝ   θ   ] fH?@v   &#xd;
   d ,&quot;&#x7f; _] H  ; # = #d 0X D SH &#x18;fC    B d j       ) [#]  y  &#x8; m v&#xb; ѝw&#x10;!hF&#x17;  m &#x2;   !(ܾG  &#x6; I weդ~` Z         !L a   ) f&#x16; \&#xb;  f0&#x1d;C6;R;&#x8; ů e@v Kg^ y   skED2zLx~  h &#x15;. d&#x1c;|&#x3; _&#x1f;  ʢl   e@&#x1f;E  	 &#x7f; ^Tn 0v?Q ӷ /    &#x0;  1  &quot; ȌHX  $F   oZ	 % A  ÕM  KÌ 5   Xr &#x1;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="key-date" elementType="Header">
                  <stringProp name="Header.name">key-date</stringProp>
                  <stringProp name="Header.value">20240803</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="version" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="encryption" elementType="Header">
                  <stringProp name="Header.name">encryption</stringProp>
                  <stringProp name="Header.value">6gRm9jiem+dwtz+JxKFOSHhjYa0NMN4ANAZ7Xy+Ly8LMP4Z2oZktuPD02singwvpJzgH1y6/x7hDsuxKforILpCVqYcH9z8sF5NVXiVM</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-292" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${JPET_STORE_URL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="viewProduct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">viewProduct</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">${C_productId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="C_itemId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">C_itemId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">;itemId=</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;&gt;</stringProp>
              <stringProp name="BoundaryExtractor.default">C_itemId</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">0</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:53:11.025</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-293" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">collector-hpn.ghostery.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">8  h3\D&#x2; 6   v[ %7 n:[&#xb; &#x6; B o&#x1a;B  D=  &amp; &#x16; N&#x6;a&apos;= t &#x17;} @&#x10;  &#x1a;.# b   ÄB &#x18;  H  &#xb;&#x15;s  &#x0;ʹZ&#x0; &#x19; W v kbYsE Ut&#xd;
Hs &#xf;^[Qɏ . &#x1c;25&#x5;uf k~ &#x17;  p +:&#x3;&lt;&#xf;   &quot;t * u A&#x17; *&#x1b;3 L  &#x18;c&lt;&#x18;T Iw  в V/  &#x14;&#x13;  I&#x13;/ 6  &#x1e;6/ xi9(hkGE8&amp;M &#x13;  R &quot;3 fh  8 = SS P  U&#x19; $f   pk;&#x13; _  C x&#x15;&#x13;    Z&#x13; &#x1;  &#x1b;; 1X&#x10;? &#x18;     RQA z    )  &#x1e; 4 8?  N  J[vf   #a&#x13;&#x7f; ) 9  e +\ 3  9    &lt;&#x7f;rLF	 jUF !  q+  =&#x10;  14 6; f&#xd;WnmtH .,&#x19; ȶ  &#x6;mYAL  &#x16;j  DC- 	M x  / 9s F ?ah  氆b9 &#xb;5(Ep H1Bu+= {  &#xe;&#x1c;ۑk3&#x14;e  ]J q  F  ;&#x4;&#x1a;	u U&#xf;X  &#x1a; w m H(&#x8;&#xf;  &#x5; \ &#x1e;  MSmOG =&#x8;   : &#x6; i  &#x1; t &#x1e;&#x18;4&#xd;
5     ҆&#x8;B{   &#xb;`{VT&#x17; Q  &#xc; &#x18;   w&#x19;U    } D rp ThS   &#xe;:  z    ڰ    Ԗ &#x2;M   W ҍ &#x1a;&#x8;RY   0 S7&#x8;&#x11;&#x17; 0K&#x1f;&#x14;    z  &quot;  yG      &#x1d;  g  &#xf;z̿  pqq  &#x4;!s   OXJ 	 BKu    vV	 U  &#x16;֯. -3   &#x17;   J Ѻ  i  ,g&quot;  *3L픻   `7⯓L &#xf;  Ű  L&#x8;-RU  1t_v&#x3;wN&#x1d;&#x1c;     %A  `Y |6R&#x1e;͍ND+  {# f&apos;  ) ( ,  Nm   =5 0 ` ٌ  [ y&#x13;L , Σc&#x1a; @ &apos;&#x8;&lt;&#x13;ʣy^ƙ   &#xd;   8 _0m$ E   &#xd;       0&#x4;L  ٜ ]&#x4;O  Hq     &#xd;  o &#xd;  m -   &#x18;  W  &#x8;D; Z  &#x12;&#xd; e,@% B   % &#x15;&#x7f;  M  &#x19;&#xc; D]7&quot;z &#x1f;  &#x74b;   , M WCl&#x13; k&#x14;u=Y&#x13;&lt;ί  ? %7!:&#x5;  &#xd;&quot; :&#xe;3 l   o&#x1f;&#x3;cw&amp; &gt; ˏZL&#x5;V     &#x0;N 5lf {  x^ vg &#x0; / &#x83;&#x19; k &#x6; ʮA &apos;  J8  &#x16;   F jD   )  &#xd;/n M &#x1e; &#x12; {K   G&#xd;
  &#x18;\ H n4  ӷ  h    ƴ&#xf;&#x2;&#x19;!&#xb;7 *   &#x4;0  S 0W    2  &amp;C    N9v, io\N&#x19; &#x1d;  D p   ;U &#x11;  &#x5; &#x1;  D&#x1a;ɜ  -} C   =y&#x1d;&#x13;   = ٬  cְ _  &#x1e;̀  &#x1c; u ^];   2O&#x12; X څ p&#x13; Q &#x1e; @&#x3; !}ֲ&#x10; &#x1d; 3^qp( &#x4;V &quot; .&#x1c;rr&#xf;&#x13; &lt;&#xe; `  ! &#x6;&#x11;sA &#x19;&#x16;&lt;  &#x8;ZŇY 箓hN  &#x12; d P$      l  Q4   G9	AI&#x18; &#x0;S  5+   _ &#x6;  f a  &#x4;    &quot;C=[    &#x1f;3y8Kc N   ף[  &#x383; u #f#&#x5;  &#x0;7  :3&apos;/   T&amp;3!`&amp;+wR&quot; &#x7;. P&gt; -uO {j&#x8; . x q I/W { &#x14;Q Mx   _0&apos; B&gt;  (&apos;@  &#x1d;?j}     F -t&#x1;&#x16; &#x12;   Ye   A&#x10;    &#xb; e   x  D&#x15;C A 9X m$  &gt;|b F&#x1a;#9 &lt;  C^Z  Ψx bw&#x1d;   k&#xb; &#x12;  &#xc;ܨ GHe ;O  &#x1d;&#x7;4 vmvG &#x1d;&#x15;W&#xe;4&#x0; 0Lۑ)Iq1 v\ #   t C  D  W O&apos;)GC p &#xf;  	&#xd;
i &#x1e;n &#x18;  &apos; 5oi_ ~p f &#x2;ڬ&#xc;ע.  f / *o&#x2; &#xe; &#xe;   Lr &#x19; &#x1d;t   V% ݭ  Ƿ &gt; -k q 	zL  &#x10; IC_&#x1a;&#x4;z&#x14;xC&gt;&#x0; &#xd;   B  &#x18; ?i&#x14;&#x5; +=&#x6;b  b   Ϛ  U&#x8;j  l2ޥv (X    т d  i   [m |o  &#x4; &#x1e;. +c =  a a f /&#x17;v  Y  &#x15; 	 V   02  m    - ~  l W  wr ߳0&lt;zh      0{4o&#x19;  RF L!4   &#x4; p= կ 񂼪  ¥Zb / Vt U &#x14; D I&#x1c;   t y  &#x3; &#xe; &#x14;&#x1a;&#x16;&#x4;R ~% Кl &#x5;Y&#x14;h8`ɵ&#x7;&#xf;ؙ  &lt;&#x3;t6GB vj     &#x1a; u% &#x1;   j&#x1f;5 4&#x12;&#x16;b  ٚ&#x6; ^&#xe;    ^M     &#xc;9&#x1a;  &#xb;7O$v &#x16;c  )J&#x18; &#x4;  È&#xc; PAd2 &#x17; ؛  &#x12;&#x16;&#x3;&quot;&#x1c;# &#xf;y   &#x3;m J  :x {Sd * &#x14; D E  n\ a 6 d  7   L+Q    Y  =K&#xb;B4 N &#x1c;[ bN55[ݗD  gAE R  &#x1a;&#xf;32 e </stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="key-date" elementType="Header">
                  <stringProp name="Header.name">key-date</stringProp>
                  <stringProp name="Header.value">20240803</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="version" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="encryption" elementType="Header">
                  <stringProp name="Header.name">encryption</stringProp>
                  <stringProp name="Header.value">6gRm9jiem+dwtz+JxKFOSHhjYa0NMN4ANAZ7Xy+Ly8LMP4Z2oZktuPD02singwvpJzgH1y6/x7hDsuxKforILpCVfGmxExcLWH71JjLS</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-294" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">collector-hpn.ghostery.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> &#x6; +   ݰ!  m=  &amp;&amp;$ DtԞ&#x1c;~ &gt;   /&#x12; HJ (&#x1b;  ,T)  &#x1a;z ;B &#x3; K_  `\ `   @  4&amp; gx 7h&#x2;; :f &#xd; &apos; &#x17;Ԁ  l SJY&#x18; dx   &#x15;     Na m&#x1f;se% ^&#x2;&#x1f;&#x11;M  e ߠ s c  }&gt;      &#x80;)  &#x8;  C   ɶ鸽  {&#x3; _ &#x1e;Hi:  1 T )	 &#x14;i    k[.  &#x0; d&#x16;G P&#x14;   }  &quot;$     i_@&#x19; &#x14;    &#x14;&#xf;΄&#x11;p&#x1d;&#xd;
 1 *C  Jf &#x0;&#x18;o X&gt;&#x6; x{&#x15;f&gt;8 qg FK V@ 3~ I)g&#x15; IO fv,J1&#x1;Z    &#x1b;  B &#x10;  $ܨy  @&#x7;  NN&#x11;&#x19;    6&#x1c;a}   b&#x1e;Z&#x2;   &#x1b; º  c S 9 Bk   v   )9L} +  &#xc;&#x1; &#x17; d &#x19;Nl m  =3er o&#x1b; ߁?&quot;&#x0;&#x11;   qLE   (?m#&#x7;&#x1b;&#x1f;7x &#x13;ƥ&#x3;&#x10; z&#x1f;  \Q&#x12;[ |  &apos;  1 !    .V .c    5 &#x3; V eݾ     [3&#xf;&#x7be;]8 f &#x0; ~ uL		m d  [   D  x&#x8;n   =)&#x18;  &amp;&#x1a;  pY &#x4;* &#x6; )i  &#x1;6 X } s ِ    m&#xf;  &#x14;!w+   $?,Ɔ*fr]/ &#x7; r&#x7f;&#xb;X&#xc;   t  | P&#xb;   N       F C &#x8;  yf  4 g  =r  z .  &#x6; ZN\X  &lt;  &#x5; g  k&quot;&#x15;a  X&amp;ڷ&gt;  l{&#x19;fb7g mv ȱ   &#xc;Y I &#xd;&#xf;&#xe;l #   R  V.O &#x3;     ٶ &#x18;&#x14;   $jΪi    FŒPh  9   u&#x11;N     fh ^ o g%  }w&#x8;% 71 	  M[  ]  &lt;   C&#x16;[Pߒ S#oRE : ^1F  e 7 :  p(&amp;   c?    P ub D\S}   V _7  D   ޟ   D 5̈CH  &#x10; 1M &#xf; p f&#xe;   ;M    Sf&#x1e;   &#x2;?&gt; &#x10;A&#x1b;w&#x13;ֽ k C &#x1a;u   @F5 XMi- &#x7f; &amp; d   K 4Bʒ&#x6;&#xc;K  k*q&#x8; Wx@a~wc~ &#x0; f  : &#x1f;֕&#x8; &#x7;&apos;_ u찅]}mo?Gq *&#xe;   &lt;dm&#x13;q   &#x7;  2&#x2;\    &lt;# &#x5;{ J&quot;&#x18;  ғ , 5Θ9  Ђ8&#x15;  CN 8 J9&#x14;^  GJ&#x5;N &#x1e;&#x0;   &#x19;ߪe~ Z&lt;הbT  &#x1a; \&#x8;   5 H  m &#xc; b &#x5;*  lȘ          	 &#x1b;kj   b_1&#x1e;= &#x13; &#x11;  뇆y   dY      &#xb;!٤  r  Kk&#x7; n\&#xd;  &#x8;D&#x16; B&#x10;&#x8;Vѯd Av  ÉQ( &#x1d;!   ɸ 2&#x14; 96 Q= qv P   ~   jY   /E}H  ;60c  w   7o\&#xb; &#xc; &#x14;ebn @&#x17;	 &#x8;  3  &#x10;w   b *_^   g&#xd;&#x13;  &#xe;- &#x14;     + mÕ&amp; Cf&#x10;  &#x8;Wg&#x7;&#x19;v&quot;M n #ڪ &#x7;h* q  Gu j qwd &lt; &#xd;
S] &#x7f;۱wU vڊ2WX ՛    &#x2;    l&#xd; +  û1 &#x18; P3 9&#x19;   ?&#x1a;ma &#x15; @ T ^  x    B R &#x1d;&#x12;kӒ]x&#x12;$)  o\   r&#x13; 6H;j&#x1b;  ޑ H &#x0;uNNE &#x10;{:B&#x1;.   ŜZ  &#x10;&#x19;Ҩ &#x17;&gt; auN  &#x1d; xLZ  Rx  &#x8; i +r\   N  A+( &#x18;&gt;F &gt;  &#x12;ԡ A    \g &#x1f;m   &#x11;Ծ &apos;Vs,  Z K§ L j&#xb;&#x8;   M   O   FW t n &#x1d; &#x17;X  -  &apos; &#x7f;y   S&#x18;T&#x3;@ &#xd;
&#x3;  &#x1f;T%   $mo&quot;  &#xe;!&#x8; &apos;g-    @    &#x11;w ~ &#x18; }&#x4;%~&#xc;&#x1a; r&#x1d; R!  &#x16;ğ  &#xd;
;.&#x5; \ Nj&#x1d;   S M9  &#x1d;&#x5; t5U  y   K  6Ψؖ    &#x1f;   h&#xb;:  T3- 6F0y  Ѯ &quot; 2@   9  &#x19;   S ɒ  T]0 &#xf;   2 s  ^ .U YVq&#x6;    b&#xd;
  #k 䕲 #&#x16; S &amp;  ܼ. 6{ UHuf&#xd; { ;&#x12;$?p    n &#x19; &#x11;&#x1d; 	    /! &#xe;x &#x4;+kH &lt; O  &#x6;R  v   \ @ D	jXb  &#x1c;* o}q S 틢&#x1e; %C  *B &#x18;  b_   RX  &#x1;  jJ    _&lt;   0q)3 &#x1d;yd      9 &#x5;   &#x10;lM &#x15;&#x14;   SM 6 aS  &#xd;&#x81;0 83   t7o ` &gt;J &#x6; s&apos;-1 A &#x10;  &#x1c;S     O   ~ɠ&#x1c; &#x18;&#xd;
09  W )u) s10Y&#x1e;DR C9Z+   As  E!׳   W&#x5;  &#x15;  K &#x1d;   !     d *7| # &#x16;_ M~ P &#x0;T: }  H9 MK.   X/p+&#x17;&#x8;N % &#x4;م &#x4; .&#x7f; l&#x12;&#x0;*3l$ Sˇ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="key-date" elementType="Header">
                  <stringProp name="Header.name">key-date</stringProp>
                  <stringProp name="Header.value">20240803</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="version" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="encryption" elementType="Header">
                  <stringProp name="Header.name">encryption</stringProp>
                  <stringProp name="Header.value">6gRm9jiem+dwtz+JxKFOSHhjYa0NMN4ANAZ7Xy+Ly8LMP4Z2oZktuPD02singwvpJzgH1y6/x7hDsuxKforILpCVhYP+xuuNR4ZMWdEc</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Select_Item" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-295" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">collector-hpn.ghostery.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">]5;  v&#x0;Vӊ 6 *&#xb; n&#xd;
 Zj :&lt; mr͎&#xd;Z  *&#x0; g&#x2; ܱ^    \  G̟&#x1e; b&#xd;3  tyRr#  &#xd;?6h `  &#x1f;   V   L&#x19;  	yL  s {X&lt;&#x13; &#x19; ^ U# |O@mbv  &#x7f;   ҐB &#x16;&#x7ba;qmM&#xd;
 @ &#x15; V]   Xk  &#x1; &lt;NU  &#xf; f(),B&#x7f;7 } &#x6;   &#x18;Iy&quot; %J &#x0;  p s&#x11;Z= &#xf;     &#x1b;  &amp; &#x1c;}K6[n9 ԋ܂r &#x12; x  , a T &quot;Ә 3&lt; &#x14;E&#x14;f$ tP`= 	   &#xc;? &#x14;$ &#x1e; S	 &#x7;)a*&#x7;C + &#xe;\: tf;: # &amp;)AJe- Q 6DϨ 1  dc =  ^H  b R U} &#x1a;  ) J W#  3 &#x7f;&#x19;   5} @  -=$ &#x7f;D&#x15;&#xeef;   p&gt; ]*&#x16;H&#x8;,&#x12; &amp;&#x7f; 1    i A  I  % 58]  _ =  d^Zp&#xc;C  yX* _  8 PS MO i ^ &gt; N&#x3;&amp;=  d .  8 I&#x14;R&lt;=R &#x1;GCK&#x1a; # &#x2;  M&#x1;  6&#x12; :O ^&#x8;/$ 4   Eİ\yT ]X&apos;fm q=$&#x1a;ǚ  &#x17;,   s &#x16;&#xd;
SW#{ j&#x7;&lt; (i  &amp; i믭&#x6;   &#x7f;( w@X &#x7; &#x19; &lt;``  &#x6;nȒ,&#x7; b  &#x18; &#xe;J &quot;;fv    鞷{    &apos;  % &#x1f;,&#x0;&#x7;       p&gt;bQ&amp;Q   &#xd;   Bަ&#x17;Bwa&#x19;*&#x6; U&#x18;b&#xd;
K~b .x $&#x14;   ֦#  @   z&#x16;&#xc; +  Tƛ &#x13;x 2 B O  &#xd;
L՛ hYrM@ E@-R@I Zs  4    &apos; &#x1f; &#xb;&#x1a;  r $     &#x12;  &#xe;T h 3 S  &gt;&#xd;    z0oI &#x16;XDH_ @ d&gt;&#x1b;Y  jDn6{  }Τ  &#x16;/c  Ξ H ȇ\_     jAq&#x11;u&#x11; Z cۡ 厁&#x6;2 &#xd;q  Ȓ   &#xf;&#xc;   ⻟ Ix]&#x1a;p ՓN t      O &#xf; &#xf;P&apos;Q&#x4; Ú f T6  4A&quot;    &#x0; Nr* e   Y+#  &#x2;  &#x18;[ y B&#x1a;P T- j      x  &#x7f;2C j}j&#x7f;*  &#x5; &#xd;
(+ e &#x19;  u YS )o H .&#x7f;&#x13;31&#x1b;yg $D  P X x-  3- u3&#x8; ]&#x0;]1 u v4( &#x15;&#x17; ^; ln  G  fGI I &#x1c;;&#x14;  5d  &#x12;&#x7bb;&#xf;nn DI&#x15;O &#x1e; M_V  K &apos;e *(H&#xb; 0  &#xc;&#x19; &quot;&#x12;U d F q  G sKn3&#x1f;  t l   n&amp;&#x11;  UU  l  1R &#x1b; M&#x4; @]    7   Qnxm&#x11; + ? +    ${FUDi Z   &#x8;    b&#x0;	 K]   =  z    /     &#x1c;&apos;9A  &#x1b;&#x1;&#x14;&#x18;s &#x12;o  lt ڃ; lD S &#x5; 2&#x0;  t &#x5;W&#x12; &#x1a; &#xf;1  l&#x1b;l  ^C!    &#x2;p Ё! &#x1c;  4% :S &#x1;] 6_ Ut ։&#x5;t  ?r  0        A &#x16;~//  &#xf;$ &#x16;  #Y8  N    5&#xe;  &lt;LB  20wu &#x7;HQ&#x1e;&#x14;&#x14;kn  &#x19; b,   0  ʰ N#a &#x14;   &gt;  f = &#x1d;&#x9d;&#xd;_   E &#x10;.&#x7;b6Bnk  &lt; f}| ։   +ĉ  #  T &#x8;a Sgb&#x0;&#xd;
   d  0p&#xe; (   &#x12;n&#x5;   &#xc;&#x2;&#x3;c?{ D   |  A (_e  KR +O &#x18;A   &#xd;
 T   &#x16; =e ~ &#x8;  &#x6;&#x6;     	 H   &#x8; e  w k   O     2dCUG&#x16;L    =    =U   B  ű%a#y   &#xc;&#x1a;   쳶O:	  ;h &#x12;   ~ &#x17;&#x16; &#xe;6X&#x10;wu   l&#x1e;&#xd;&#x0;=&#x1c;5PW t&#xd;&#xe;   |!  $&#x1;&gt;SH GU!{ &#x13;˘&#x4; A &#x2;[u g&#x5;&#x1a;  ,?    &#x2;= ѕ&#x1;&#x5;  HL6 &#x1a;Dt 5i   eP &quot;9Ț_J&#x1b;&#x0; Qs @QY iݽ&#x1a;&amp;  ,   hR Ц&#x7f;&#xe;  ^[ &quot;l e  &#x2;=Юx eP &#x11;}L C   s  &#x1;r  n  &#x1c;łz7n   a&#x12;-] &#x1c;L B   [M   , &#x10; V t ,)&#x15;  &gt;B6` c8nƝ &#x0;&#x11; Qd`    &#x1d;= t  7 p &#x87;^Pw  &#x7;K KI&#xf; &#x17;y &#x16; &lt;&#x1c;5&#x1d;E^ &#x3;&#x12;4C읙  ,  [&#x1b; &#x2;  ] 9n &#x10; &#xb;ط &amp; y  ^ȆO   qM , , &#x1e;&#xd;
5L &#x12;h&#x1a;5&quot;sٜ%_&#x1b;YP8ȓ8a&#x1b;墳 &#x8;   q  )   a .&#x7f;e _O  f   / ZJ A. A &#x8d;s$  Ks  &#xe;o0 	PjM &quot; z &#x4;  @ĉ&#x7f;     &amp;   VUf &#x19;  Ix&#x14;&#x1e;P hcslCW   5 &#x4;  j  j &#xc;q &#x12; N   &#x8; r0&#x1b;0B? 0  d U&#x4;&#x12;ι&#xf;&#x15;+  ,&#x1b; ,&gt;eμ Z&#x8; K K=d&#x17;  S   &#x3; #&#x7f;/   %-&#x12;5  &#x12;U  _   Mi &lt; -   V /   </stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="key-date" elementType="Header">
                  <stringProp name="Header.name">key-date</stringProp>
                  <stringProp name="Header.value">20240803</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="version" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="encryption" elementType="Header">
                  <stringProp name="Header.name">encryption</stringProp>
                  <stringProp name="Header.value">6gRm9jiem+dwtz+JxKFOSHhjYa0NMN4ANAZ7Xy+Ly8LMP4Z2oZktuPD02singwvpJzgH1y6/x7hDsuxKforILpCVR53PrEXcC7BJU3o4</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-296" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">collector-hpn.ghostery.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> |F2     &quot;  X? ϗ   9 $	] d  0  Mۇ|  ^ 5 ڼf  s]2 &#xd;
H 3څ&#x1d; &#xf;&#x14;y  k b&#x7f; HD{   : Q 5c e  &#x1d; M&#x1f;&#xb;   &#xd;s ؜ˣg  &#x12; 6JG hx&#x6;  } ¹&#x1a;  z}&#x10;ɫ &#x12;L  lPuU&#x14;+ͼo C 9$&#x0;C &#x4;  &#xb; u	 &#x1b;&#xc; t&#x11;昿   F&#xc;  XN0h3&#x16;&#x1d;&apos;u&quot; &#x8;      x   &#x15;  Ì IH7[T &#xd;    &#x13;# ß= y&#x7;&#x15;   dV&#x1c; _&#x1e;[ڑ/ / &#x7;2  /    R&#x18;  \(&#x5;    Gת&#xf;&#x9e;AH# _  &#x10;r h  :0&#x7;&#x17;nY&gt;A*  T   ޡ  G    x  C$d7m &#x8; I p 2   	&#x1f;&gt; K  Dq `    &lt;q &#x19; J  + &#xd;  4-Z%V V&#x2;T  ;      &amp;   &#x6;  9܉  F  &apos;}^ͳ!       &#x1f;䈽$ 7 rַ (H{Ù ds; Fq u|! Ī4&quot;&#x14;&#x14; I&#x16; #  }   2_Y &#x1; &#x10; G z&#xb;  ;  N$X  T#&#x1a;  b @7u s &#x18;&#x18; v9hR   &#x17; T   &#xc; jO&#x17; t &#x5; yI  0 &#x1;}-&#x10;-&#x1d;  /uˮ_0&#x19;   ?M  g41 _# &#x15;\ &apos;C&lt;&#x1c;  &#xb;   jS, wh	`,&#x0;=ǫ HϞE1 g J &#x13;    &#xf; &#x11;&#x6; 	  &#xd;
&#x1;s0  l D &#x14;[S Z)Z &#x1f;/&#x5;  `&#x1;&#x1d; =   \  &#x19;Q&#x16;&#xf;  &#x19; S &#x1f;l 򤬞  ] j   D &#x4;[ D ~ 4J  I  N &#x19; xqp  Jۢ$ t t F  &#x1;]    ~ Z&#xf;   H&#xd;
 = &amp;B &#x1;)  G   n\  60/`+{ L  &lt;  \ ~ &#x12;  # &#x13;&#xc; &#x5eb;q gCq&#x11;#       &#xb;&#xd;
0 Ǌ    &#x1e;&#x1b;1Ѳ=վ  X &#x4;&gt; Ca&#x6;   &#x19;  ii  &#x0;  o} &#xd;
 V  &#x7f;[ &#x13;&#x0; &#x10; dN&apos;    {6r -@   F*K]   y6 O  e! #  %l͘     A&apos; &#x10;   }     B  &#x10;&#x11;M:&#x16;(HIT  e&#x2;       yS%&#x18;w     &#x19;   WFFMM&#x4;M  q hXyp 1 |&#x1b; K&#x11;l ^[U8 V ,gq  (&apos; ӊ$&#x2;41 &#xf; :y    z ( #߯&lt; ѻ&#x15;Җ&#x1d;&#xb; &#x1f;4 &#x18;iX  u     &#x1d; (wq   k&#x1a;  A  &#x8;ҭ&#x4;/2 	 ]    `  z T&apos;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="key-date" elementType="Header">
                  <stringProp name="Header.name">key-date</stringProp>
                  <stringProp name="Header.value">20240803</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="version" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="encryption" elementType="Header">
                  <stringProp name="Header.name">encryption</stringProp>
                  <stringProp name="Header.value">6gT/hTuVF4eQt2fF/i6pDLLOT36BEb4jcuBZcdj91IqFkA+REpRzlwqYLf4/qgqnfUrzVkYOuOEa1xc5EefN3Y9FsXxqS6voBYSIQ48g</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-297" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${JPET_STORE_URL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="viewItem" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">viewItem</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="itemId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">itemId</stringProp>
                  <stringProp name="Argument.value">${C_itemId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:53:11.025</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-298" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">collector-hpn.ghostery.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">  d  ̗&#x15; kO n w&gt; )33&#xc;o &#x10; &#x3;&#x1b;q A&#x1e; &#xc;&#xb; 7: &#x1c;Yi܊7;V) ס  ⒴ ,s Z&gt;sZY&quot;`&#x5;&#x14; |]♄ }&quot;&apos;Ϻ &quot; 5  o   &#x1; Z ei@|  Dk    fGw&#x7b8; &#x16;  \&#x14;  &#x17;&quot; W Q 7!k:E1  &#x1b;e²  Nc qF *&lt; 7  &apos;w  +&#xb;  j &#x15;&apos; &#xd;  C&#x10;J7 q &#x17;f  &#x2; &#xc;8 GD&#x1; (Z4L2r k R h &#x1e;R b4  ; 6  _   9 SvH &lt;Ni   @  -&#x1;&#xb;i+  $   E /   &#x8b;  &#x13; &#x1c;?* X  a&#xb;  +Ǽ&quot;U&#xd;
+zo  s~ b bg ^s6   0 Ѐ&#xc;. &#x7ba;i^&#xc; LC&#x1a;Wn   E W Wzl Wt :&#x5;-  9  y  &#x14;&#x2;+Ux     O &#x1f;   8@&gt;&#xb;  9s$e   &#x15;  &gt;ߥ k +Z1p &#x1;M h 3  &#x16;  \  }T  x&#x1e;&#x8;2 £I    V  $c&#x17;*;9 H R     &#x1e;Ypso&quot; xk  &#x1;  ?z Fғ&#x5; V A &#x1b;  &#x13;&#x11;s   &#x10;] d: I&#x19; ύTd&#x7f;r  o  _o&#x18;{9r&#x4;ln  =   ^  [:  % 3   e9 e     e V8&#x12;  C  &#x12;&#x14;0 {+IB  F 9 &#xf; &#x14; th =3 0 &#x0;ϵ~ &#x15;    l      Y  F  ( &#xe;&#x15; &#xe; Op   &#xb;&#x15;  /D Y~U  wƗ R Iq* nr5T k   &#x17;`  y s /T   F {  ) E Z n  x&apos; }  N ?&gt;    ^ކ w   &#xd;
/Pi O h    Sva,N *9&amp; &amp;xؾ&#x19;   &#x1;%Y&#x1d;6&#xb;    n  v  eL  u 4 &#xd;    &quot; ҃   9   w;   ) &#xf;ml  !}*     +    w=CǕ ?e &#x1e;5:&#xe; o   3  Z:&#x13;   H Y D&#xd; JxO 1q&#xd;
 4ja~&#xd;  Zɀ O&#x15;&#x1b;9   G L   0@  ۴Ⱥ کy    , Mѧ&#x3; d ڟ&amp; &#x6;k  T   } 3 Ni&amp; (X      Y  EN ^]&#xe;  &#x1f; eD &#x5; Lh&lt; ѫ܆&#x17;5  ?     I O &#x3; B&#x7; *f&#x7;*  d &#x11;&#x6;/  x &#x17; |  d .&#xf;&#x2;_k	  r2 {&#x12;   N&quot;  ~  :;&#x7f;&#x13;҂c  ϯ  &#x5;	Ǒ &#x5;&#x1e; t&#x1b; r T&#xd;
 m&#x15; &#x5; &#x8;&#x1b;    {&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="key-date" elementType="Header">
                  <stringProp name="Header.name">key-date</stringProp>
                  <stringProp name="Header.value">20240803</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="version" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="encryption" elementType="Header">
                  <stringProp name="Header.name">encryption</stringProp>
                  <stringProp name="Header.value">6gT/hTuVF4eQt2fF/i6pDLLOT36BEb4jcuBZcdj91IqFkA+REpRzlwqYLf4/qgqnfUrzVkYOuOEa1xc5EefN3Y9F0COhXpF5Y9nE+Ab3</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-299" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">collector-hpn.ghostery.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x11;z sk  M e( &lt;&#x1b;&#x17;A T   z3  0 &#xc;  &#x4; ,cW FCN&#xc;&#xd;+z   ,=   / %    ;  &apos;G&#x11;  i 8 Pt 0&amp; m  V _y 302   Nr  D.&#x15; 	4 5g   H  \3y    N  j&#x5;D  &quot;&apos;2p3 U% dB#jT &#x18;Ʌ &quot; }G &amp;&#x5;    K   &#x3;.x    2 X&#xf;I &#xd;
x  F _     &lt;&amp; &#x1c;  81  &#x1d;* V  2+&#x7f;cP&#x15;&#x1c; &amp; Z -5&#x1b;&lt;  5/ g&#x1a;n͒v - +G S K 4&#x15; ]%d     9 g4D MEN  &#xe; Ҽ  %qIG&#x17;&#x8; &#x8;m&#x4; Ur&#xd;&amp;I &#x1c; b9 WQׄ&#x6;-  v   Fz!&#x17;\&#x10;}&#x2;&#xc; &#x15;n P/  Y͔  y&#x6;M k&#x12;QD  &lt; &#x1a; &#x16; x    A  &#x1c;8 &#x8; |   &apos; 8ݘ    l~dѻ &#x6;u  vzo  &#xd;o   ø   &#xd;
 lBa&#x0;&apos; &#x5;L % &#x14;˾    X   LG-ub a&#x5;!@  /* V(O  &#x1b;!&#x14; &#x8;O璊9 # &#x13;`  H&#x10;&#x15;%&#x17;&gt; 鵀&#x1c;&lt; 78  ` 2&#x7;S&#xd;
   Uh  \Iz:&#xd;
rO 6 0&#x6;&#x8;      F&gt; 3Y   	    &#x1; &#x7f;wr} e  ?Q&#x4;   9  )2 qƻ r &#x10;=   k z &#x12;&lt;&#x8;jZ &#x17;AT&#xf;   k  C &#x17; ͅʻsW&#x1c; C f ̞) ! ,.CN( #* Z&#x11;1r$D      S ^u #    &#x12;Ƞ\E &#x8; ;   &#xf;  &lt;  ) x`  ô9cĕa  &#x5;  L&#x0;  a4&#x17;䩮   r&#x14; &amp; 3 X&#x16; )y &#xd;  &#xc; J F|&lt;bF ʶ*&#xf; = &amp;Ѓ   2&#x1b; &lt;&#x5;0  0 &#x16; w ⨕  9T.  7B &#x0;  &#x4;&#x2;M_5}&#x17; &#x1d;&#x1e; J  &#xf;&#x5; T  &#x1; {      &#x18;  &#x4;  H&#x1f;?&#xd;]!  Ķ&#x13;I@փ 6 Hh p   _  =   &#x11;&#x13; I&#x0;^&#xb; h &#xc;4  臒?]&#x8; vl* &#x1b; &#x1e;-	6   \8  v  &#xd;
 &#xd;
 %ԇu  0 Ԙ˩    Y7)&#xf;   )  &quot;   &#x7f; t 6 &#x11;  1 G     ~&#x0; *eDb ,&#x0;    9&#x1c;]i  &amp;k RL w]  B _ۗ-}Ui( r3  מBG &#xc;  &#x1e; &#x16;H١b p&#x14; =  k &quot;   	&#x5; TK A N Y  x9&#x8;Й  :/U!ZQ O : ʝ#[   r y r&#x1a;Xki  &#x6;S&#x15;&gt;L rJ   </stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="key-date" elementType="Header">
                  <stringProp name="Header.name">key-date</stringProp>
                  <stringProp name="Header.value">20240803</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="version" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="encryption" elementType="Header">
                  <stringProp name="Header.name">encryption</stringProp>
                  <stringProp name="Header.value">6gT/hTuVF4eQt2fF/i6pDLLOT36BEb4jcuBZcdj91IqFkA+REpRzlwqYLf4/qgqnfUrzVkYOuOEa1xc5EefN3Y9FDfNN25klnp1moK4v</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-300" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">collector-hpn.ghostery.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">NMݧ&#x13; &#x1b;&#xf;&#xc;T &apos;E &#xc; X h&#x6;%lN    ) 8 &#x10;6   4j	 j |   &#x5; 1&#xc; S&#x1;  b8   խ r &#x1c;T 9  &#x1e;+ &#xd;
 &#x1b; Ҩg  &#xe;ޜ K&#x1c;&#x11;  ʱGi&#x0; 8     Q^!#H&quot;&amp;  5 P B&#xf;  Eq  =餩  &#x14;&#x10;   # + z ?FbM} U  &#x3; Z&#x1c;&#xd;F gE &#xb;  ̥ O%&#x4;t`  &#x14;2 Q   &#x12;Ҫ&#x7f; &#xc; &#x17;&#x0; Up  [O     &#xd;
H&#x7f;&#x2;   1C&#x7f;  I&#x7f;1 ; Y\&#x2;{&#x1d;    O&#x7;~@P&#xb;M d&#x12; p  &#x18;  |.      Xq /O&#xe; &quot;   B  s}[t YmIb&#xb; . &#x13; 39dmU 0  |  &#x1e; H X) Ce 8u WN1  &#x8;% cM%  4G R &#x3;  ɭ&#xd;
hV&#x1d;&#x15; |      4   H5  &#x17;    3 } &#x16;  +   G &#x1b; &#x7;  8  &#x15;  &#x12;n  &#x1;w۳	 ; &apos; &#x17;&#x19; ; &#x1d;   &#xd;
 R&#x15;&#x12;k &#x1c;&#x1a;&#x7;  &#x1d; d  &#x1d;Yϔ  3    P  &#x8;5Y U&#x10;J    0 Xl0  a  &#x13; @dc &#x1;8  O&#x0;#  C .d (3 E \&#x16;s T   :  v ;  &gt;=&#x1a;v &#xf;&#x11; kD n  %~     DAp+ 4`&#xd; #&#xe;&#x1f; 8&#xb;&#x7f; ]&#x1f;  Lj :  &apos;}&#x1;  A&#x17;7ų    TYwm4m&#x0;&#x8;hE  {=T  1     &#xe;] &#x7f;  ; x &quot; RX&#x1d; | e / 㩽 4&#x7;j  #xL$C#Jj&#x3; 퍭  P a 2   &#x7bf; &#xd;
7:@ v {@ ú|  &#xb;W;AD&#x1; ;6&#x13; ! @ )  =h Ϙ4 &lt;  ,_ &#x8;O&#x1f;&#x1;&#xd;  w J @tYFR : Bw    &#x9c;&#x16; 	i&#x7f;U F C&#xd;0` O wop *d } Y  : &#x7;ֳ   63  8 &#x5; 4b&#x1e;  dv 6Xo&#x19;ǖ &gt; $ t| &quot;y ɍ X    X   ^ e   ܸ&#x16;&#x1b;h &#x16;ђ橏 	  8 g m ;&#x17; O&amp;&#x2;&#xf; &#xc; &#x3;lX;  $*oc i4ُ  Y2  0     5P  m : &#x1a;&#x17;&#x14;ɲ3) dk  &#x8;1  &apos;3  ȍp YL1=XJ&quot; Dɢ&#x12;  &#x0;6 F&lt;Y    5&#x1b;T &#x0;v  4&#x4; ] 7&#x1b;k   &#x0;   ս  &#x11;   B  &#x5; &#x1;   Il C  &#x7f;`&#xb;8  8 &#x5;@ M0p  ( 7   T        1&#x1f;   r)8v t 4 &#x1e;&#xc; &#xc; E Vaf&#x1a; B  j@&#x1f;C 9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="key-date" elementType="Header">
                  <stringProp name="Header.name">key-date</stringProp>
                  <stringProp name="Header.value">20240803</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="version" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="encryption" elementType="Header">
                  <stringProp name="Header.name">encryption</stringProp>
                  <stringProp name="Header.value">6gT/hTuVF4eQt2fF/i6pDLLOT36BEb4jcuBZcdj91IqFkA+REpRzlwqYLf4/qgqnfUrzVkYOuOEa1xc5EefN3Y9FW+bhYCoDVus0U/KA</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Add_to_cart" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-301" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">collector-hpn.ghostery.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x3;c( &#xe;  5     :    &#x15;b   J &#x6;J)&#x2;&#x7f;&#x1a;c  Z &#x3;    &#x6;# EQ  &#x12;즳#  ] (&#x10;  A /@ &#x7; k      e{   &#x3;r  5f V  &#x16; &#x1b;[7  &#x12;   r( NfF3 Ъc l &#x1d;  ;e  &#x1b;&#x16; I x3&#x7; pѣ  6I   }Y&#x2;#6 C-&#x12;˦M1 f &#x17;$  N 6 g  &#x1; 7  7&#x19;   &gt;&#x7;n d  s ctk  rq&#xb;    &#x1c;ˁ3 KQg φN&#xe;, &gt;]X &#x0;+ ˈ&#xd;
 m &#x6; &#xf;̤  ĕ&#x5; &#x12;G irC]0  &#x3;  s &#xc; T`  X a   8 I &#x4;&#x1e;R6 &#x18;ر SLHs&#x19;  o&#x2; A&#x3;R&#xf;&#x1d;  zh   &#x14;&#x3;  {t; y V&#xc;  o v &#x383;c * &#x5; a&#x10;Ƶ jɯՃ&#x5;]u] &#x10;  &#x11;׆J&#x2; &#x11;W 2| I&#xd;ӗ}  rH  `} TO \t  ;&#x0;SX 	r  Xl0 &#x5;  ݛ : o   &#x1;  i   &#x8; M&#x17;(&amp;  Z_&#x10;&#x11;2 =n&#x5;&#xd;   M2 	,I&#x1a; +  &#x4; ξy t   5 Ã  r K &#x4;  &amp;  j   V6 8 a    &#x7f;  &#x1d; Wor&#x1d;rj[c-,{%V &#x1c; 1%   _&#xf; {  I&#xb;-= 8 K &#x6; F? ,  ʮ&#x1; M ;q\Y     ]&#x1a;  P54 &#xf;&#xf;&quot;  !&#x1f;W S i %0 .vl&#x2;qs.  CG&amp;UQ¶q&#x0;    &#x14;  &#xb; Tz V]j X HEl   ֺ&#x1c; &#xb;8   &#x1c;۟&#xb;   ^    &#x8; &gt;&#x1e;ؑ^ P(  /&#x1c; &lt;  	ׄ ^a;Ȯ&gt;&apos; ~ ̷Z 1 kB; h &lt;$$( &#x4; q B&#xd;
  ˊ  a3  + ?  &#xd; &#x13; fq x   ɚ &#x4;`C &#xd;
&#x16;&#x11;ɑ&#xf;  &#xe;&#x13; G h&#x8;&#x15;|D&#x17;m&#x15;n&#x1a;jh f   &#x1e;mrW&#x11;,- Ś6&#x3;  ^T I[ &lt;?` RG H Wdx  t  \ ů&#x14;   &#xd; X &#x5;  &#x1c;&#x1a;?-3 x %   E &#x1b;&#x14; &#xd;
   {| ʀf&#x10;?.闬 Ê h    G &#x0;*	&#x16; &#x3;&#x19;*     : Ml  + ?AMLG d`gP  &#x17; SC l~: &#x15;&#xc;w6&#x14;NUm  &#x4;    &#x19;  &#xd;
&#x16;C뒰C&apos; kp  fQ	 }ܝ ۿ   &#x14;&#x5;&#x14;,  hƖ $G d  &#xc;&#x18;   Gפ &#x1b; B  g  &#xf;f n|Z m &#x1c;2&#x1f;m:  &#x1a;&apos; &#x17;&#x7;  ˋ P ,% &#x1a;         k B A[&#x11;&#xf;=       </stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="key-date" elementType="Header">
                  <stringProp name="Header.name">key-date</stringProp>
                  <stringProp name="Header.value">20240803</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="version" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="encryption" elementType="Header">
                  <stringProp name="Header.name">encryption</stringProp>
                  <stringProp name="Header.value">6gQ1nHVrb1EpYddSZ5JXJ3m59AMO9LBBxSJJ4a1yIC29diauAmTl1yTUSCOSZ8nOZWHT5mTc+JVlEh4KKMhGvLG/A/EePsb5lNbMygg0</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Cart.action-302" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${JPET_STORE_URL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Cart.action</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="addItemToCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">addItemToCart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="workingItemId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">workingItemId</stringProp>
                  <stringProp name="Argument.value">${C_itemId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="C_sourcePage_value_1" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">C_sourcePage_1</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;_sourcePage&quot; value=&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">C_sourcePage</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="C__fp_value_1" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">C__fp_1</stringProp>
              <stringProp name="BoundaryExtractor.lboundary"> name=&quot;__fp&quot; value=&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">C__fp</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:53:11.025</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-303" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">collector-hpn.ghostery.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x5;sGSp͟  &#x2;  ` ̷ u&#x1a; ؖ7   &#x13;Z &#xd;   .&#xe; &apos; { }.  N{GU í 0ڰ   G Ժ   &#x8;  =ћ_M 	&#x15;  &#xb;&#x8;&gt;&#x14;.&#x11;&amp;ĕ$f&#x1d;e&#x6;&#x1b; &#xd;
Y&#x6;  k s_y&lt;z b  5Ce+   x^&#x2;X| W} &apos;  l      {!     v  V&#x5;| I   ~v  _&amp;lanH{   &#x13;R5  uL! &lt;  X&#xc;  #  Ds   y&#x18;`V p~제 ĵ&quot;\ &#x17; &#xe; Mc   Z 2 NiQV  (M۹&#x3;&apos;+ &#xb;8  qLj   ^ j\獊 uB   M w  %   o&#x5;&#x14;  N4~ &#x0;  w9# &#x1e; a&#x12;      Ga! ն&#x11; 6  Z   U&#x5;K &#x1f;  +y&#x10; C &#x0;  h&#xe;  Qj u  &#xb;   &#x3;S&#x1;c &#x1e;&#x14; X*   ̃  | @ Q I;  `&#x11;   &#x6;  p&#x5;Oi se &#x3;    &#xd;
4 ~    K&quot;`dE &#x1f;k &#xf; &#x1f; Wԝ &quot; _r w2*  6 c  &lt;YݎWтNh&#xb;m&#x19;  &#xd; Xe  1&#xf;&#x17;    &#x2;Y  ј 2 ,  O7 R&#xb;=&#x7;^&#x15;&#x7f;  22 g 9Y K &#x11;   , X	 A /&#x1f;   R&lt;^&lt;Ew q   M&#x1f;    hlf $- B Q &#x7; &#x8; ڙ*  *  w  . &#x3; &#x1b;vX&#x5;@ &#x1a; &#x15;4Z : F &#x7; ݂#  Y  Z wʆL&#x13;  n(L3&amp;   ]0 &#x3;  ȻX&#xf; 6  &#xd;
o] އQY&#x7f;  J&#x18;Ͻ  &#x18; 0&#xc; .   &gt;O#  V?\( &#x16;,/ 9 &#x1f;   :  47   W&#x1f;  &#x4; &#xd;
̟tN&#x19;,4  Lq  &#x7;?X q ^[] &#xe;]   僝I&#xe;O   &#x0; M BJ &#x7;&apos;   :YJ+zΙ  y 6 &#x15; &#x5;}\ ʛ 7  &#x1a; (.!;G  ZYj &#xf;F  l5%&#x7f;   &#x18;&apos;xA\  _g ^  2&gt; h&#x8;K LHL &#x380;#  &#x16;=Kȝ &#x1a; \ l (&#x1;&#x19;M&apos;  қ cT E H+eo=  2 ImHPWnm  @ &#x13; p &#x16;  Y7D&#x12;&lt;3&#xc;Xe  K sQ &#x8; z        &quot;|&#x19;qͲ9 ܂M &#x7b7;  s g&#x10;  9P@t   Kڽ &#x0; H p&#xe;E&#x5;Bp &#x1;4=&#x10; &#x17;j  /H&lt; ܬB RŤ)&amp; p * O $    oh CX[    &#x1c; \ &#xb;]|bA&#x1b;F  &amp;0meZxړ!&#x17;V  F z  O&#x12; HC&#xd;  -    M &#x5;+ * &#x1d;uo?&#x1b;* 8 &#x19;T  </stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="key-date" elementType="Header">
                  <stringProp name="Header.name">key-date</stringProp>
                  <stringProp name="Header.value">20240803</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="version" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="encryption" elementType="Header">
                  <stringProp name="Header.name">encryption</stringProp>
                  <stringProp name="Header.value">6gQ1nHVrb1EpYddSZ5JXJ3m59AMO9LBBxSJJ4a1yIC29diauAmTl1yTUSCOSZ8nOZWHT5mTc+JVlEh4KKMhGvLG/dk9cN4RZnbrVInVE</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-304" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">collector-hpn.ghostery.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">) ap18S I v &#x3;    a痈   [# G|  . SfI&#x15; , ^&#xd;
=&#x17;  Y/  x  3 &lt;[ &#x11; 	b˺  &#xf;Ks  ;y  &amp;6k6 ҆jxQy D  &#x1b;i w   	   ˒u &#x1a; &apos;  :X&#x7; m+ &#x11;k&#xc; Z &#xe;&#x7f;c 4S3  wq    8{  =&amp;  &#x10; &#x16;,  &#x4;Q&#xd;
 ` p;&#x1d; s&amp; ` Ѿ    $ ^WVG  ^|x  A&#x17;&#x8;_ &#x1a; EF  2&gt;  k    ;V&#x1; &#xc;  aە}&#x12;&#x13;&#x11;! t5  &#x17;%^ r퓘e     #w-  㔗 d   T &#x3;&#x1;s    _/ Y!    Z 3 u N    &#x14;&#x7f;  R  K _  Ʈ?   G$ Q   &#x15;   ::&gt;   &#x17;.+ M 2= 4   W! &#x8; U  ?&#xd;i蔹   8 &#xd;
  o 4IR  a Z` o &gt;/[&#x12;̴ f ] C3,v&#xe;  &#xa7d4;  (   uH  &#x1d;)   븑P H  &#x15;ݙ ( &#x1f;&#x7f; &#x10;    Pw wp Gg &#x0;   - &#x1d;+ ː   -v I &#x13;E &#x1e;  A@&#xf;_ H&#x0; &#x2;[   3hk&#x0; &#x12;U      F  S   :y$ w0BP nB| j  &#x5; @ (s          ?&#xd;
 L &#xd; &#x14; u -    g O   l  e     $ oo,4   &#xf;  - 9ґ&#xb; b&#x11;   ; &apos;&#x6;r 5 d K#&#x6;  ܉$ #X (.ȶ &#x5;&gt;, tP    $kFK&#x6;î g      !&#xf;   \   ڢ [7U3&#x15;U0  硪= &#x8;i ߦ&gt; qA     p   eiE:     h  (  &#x16;&quot;a !  c$ &#x13;       9&#xe;3 &#xf;&#xd;N u c&#xd; $=&#x10; A w &apos; pLm&#xd;  F̳&#x10;)   })h&#x5;&#xe;ӣF &#x18;zl ^ D&#xd;
[|- .&#xd;&#x1c;g&#x16;ͧ&#x6;7     la &#xd; ^o      0Ѽ&gt;&#x12; J = 6  E&#xd;  d &#xc;  d  D d $١}&#x5;!  &#x19;UX&#x19;̋ uq e  o@  / 2 ؓT  e p  Sk &#x13; ux&#xd;   &#x3;&#x15;|&#xb; lן &#x15;_ U  &#x4; &#x18;  F   &#x10;5  m &#x19; J IMSy W =SA }H&#x8;¥ 9 |  &quot;  Xj&#x1c;\ 9&#x7;T ]ޠ&#x8; &#xf;lMb&#x4; x	 c  C e  ; g  r&#xf;  &#xd;3 2 ғq ;l T|  l &#x1a;&#xc;  9!U e&#x13;B 8U_u( &#x6;˦	Pi zG .$6 YLۓ  </stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="key-date" elementType="Header">
                  <stringProp name="Header.name">key-date</stringProp>
                  <stringProp name="Header.value">20240803</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="version" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="encryption" elementType="Header">
                  <stringProp name="Header.name">encryption</stringProp>
                  <stringProp name="Header.value">6gQ1nHVrb1EpYddSZ5JXJ3m59AMO9LBBxSJJ4a1yIC29diauAmTl1yTUSCOSZ8nOZWHT5mTc+JVlEh4KKMhGvLG/i7pohjOc4FodzvN5</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Checkout" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-305" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">collector-hpn.ghostery.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x19; Mu  B   Z&gt;  &#x19; Տ}  o &#xd;
j	    -&#x1e;եY  = XM_&quot;    ] }	-[ ё6 n p &#x1e;   8˦ ^ 9&#x1f;   ټ  _ _  #p1 B 4 &#x1b;P  _ Pl=c &amp;u  d f T ` #   i  &amp; V&gt;7&#x7;8 *    } x CFQ&#x12;aB&#x19;&#xd;&gt;	&quot;+&#x1e;S&#x17;  s )  &#xd; &#x2;  &quot;    rz%&#xd;
2 ]i f#   ߭  l,&#xc; &#x3;  P e  T&#x10; ez X BFS ^ī  V &#x15;!&#xe;&#x14;1&#x15;5$J  $ъ)  F4 W vjG  B   7 -  ( &#x1;I &#x8;&#x5;       , =  r h + &amp;   \ z&#x1d;(+xy k)As &#x10; &amp; &amp;  B &#x7f;j&#x1a; M w0  J G 4 T  Fu){nH   w&#x1f;&lt; ю    ;&amp;l|&#x7;.     j&#x1d;ɸ %a F=ק  U&#xc;9X i  zJ 0f^&#x7f;;C  HJ    -!ֹ4 &#xe;1 }T ˫ t     ֮ &#x15;; r I 1&lt;  -VR M T &#x1e; | a(   &#x6;  &#x17;  *$&#xc; e\ .  1    &lt;o&#x1c;   e/r    &#x1;  _  &#x17;  &#x11;U &#xc;E % f&#x1b; Ѿk  σ hrJ &#xc;&#x14;   &#x11;&#xd;
 $S      	     &#x81;, &#xc;  &quot;Z   ,w ;  U( &#x1c; &#x4;Sd U &#x11;   3  &#x18;s &#x13;À&#x15;&#x1f; oS  e7 &#x1;L ա*E F× &quot; &#x1e; [  1 0 O    L&#xe; )  * k &#x8; &#x17;`&#x19; &#x8;O&#xd;&#xc; j&#x0;   &#x1c;  1 }R &#xd;&#x0;e}D o  4 #  r  ,&#xd;
Ѝ &#x0;  @&#x1a;sS F&#x1;[ % k &amp;&#x2;     08    i  &#x3;t zV&lt;&quot;4  ՟&#x17;  %&#x5;&#x1c;&apos;h Lfv   0&#xe;77 Lh_F&apos;z  &#x8;  wVC /  &#x3;&#x8;&#x1f;&#x4; /&lt;  x&#x1d;I 7PQ(  (&#x1d;A ? &#x1a; &#x1d;   0P7&#x19; 2 \&#x1b;Y  ǝKM  ;d ¼    O&#x0;1D&#x6; !&#x1d;rq&#x1b; E  . n   t   T  H /PŅVn  ]p,  ` Z   &#x4; &#x2;m  &#x6;   	&#x1d; I &#x3;  +G &#xc;m yZ    &#x6;`&#x19;  5k0m &#x1;&#xe;      x    - ̴ E&#x1f;&#x12; 5&#x19;kj ̿&#xd;^;&#x13; :j      B@Q s &#x16;*% ,   \Wp&apos;@ )¿&apos;ƀ  !I&#x1;  &#xd;
.&#xf; /^ ZI  &#x1e;Ḍ&#xc;    0  ? 6&#x1a;   &#x18; 6 W&#xd;
 &#x8;&#x18; </stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="key-date" elementType="Header">
                  <stringProp name="Header.name">key-date</stringProp>
                  <stringProp name="Header.value">20240803</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="version" elementType="Header">
                  <stringProp name="Header.name">version</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="encryption" elementType="Header">
                  <stringProp name="Header.name">encryption</stringProp>
                  <stringProp name="Header.value">6gQ1nHVrb1EpYddSZ5JXJ3m59AMO9LBBxSJJ4a1yIC29diauAmTl1yTUSCOSZ8nOZWHT5mTc+JVlEh4KKMhGvLG/2PkH8EEaHRdcvnrk</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Cart.action-306" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${JPET_STORE_URL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Cart.action</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="EST-1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">EST-1</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="updateCartQuantities" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">updateCartQuantities</stringProp>
                  <stringProp name="Argument.value">Update Cart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_sourcePage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_sourcePage</stringProp>
                  <stringProp name="Argument.value">${C_sourcePage_1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">__fp</stringProp>
                  <stringProp name="Argument.value">${C__fp_1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="C_Pet_price" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">C_Price</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">Total: </stringProp>
              <stringProp name="BoundaryExtractor.rboundary"> &lt;in</stringProp>
              <stringProp name="BoundaryExtractor.default">C_Price</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">0</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="C_Selected_Pet" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">C_Selected_Pet</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&lt;td&gt;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&lt;/td&gt;</stringProp>
              <stringProp name="BoundaryExtractor.default">C_Selected_Pet</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">3</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="PET_Formatted_Value" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">// Get the raw value from the Regular Expression Extractor
def selectedpet = vars.get(&quot;C_Selected_Pet&quot;)

// Clean up the value by removing extra whitespace and new lines
def formattedValue = selectedpet.replaceAll(&quot;\\s+&quot;, &quot; &quot;).trim()

// Store the formatted value in a variable
vars.put(&quot;formattedValue&quot;, formattedValue)</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:53:11.025</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Order.action-307" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${JPET_STORE_URL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="newOrderForm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">newOrderForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="C_sourcePage_value_2" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">C_sourcePage_2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;_sourcePage&quot; value=&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">C_sourcePage</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="C__fp_value_2" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">C__fp_2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary"> name=&quot;__fp&quot; value=&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">C__fp</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:53:11.025</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Continue" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/canonical.html-308" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/canonical.html</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/success.txt-309" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/success.txt</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipv4" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ipv4</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/success.txt-310" enabled="false">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/success.txt</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipv6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ipv6</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Priority" elementType="Header">
                  <stringProp name="Header.name">Priority</stringProp>
                  <stringProp name="Header.value">u=4</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Order.action-311" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${JPET_STORE_URL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="order.cardType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.cardType</stringProp>
                  <stringProp name="Argument.value">Visa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.creditCard" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">order.creditCard</stringProp>
                  <stringProp name="Argument.value">999 9999 9999 9999</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.expiryDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">order.expiryDate</stringProp>
                  <stringProp name="Argument.value">12/03</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billToFirstName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billToFirstName</stringProp>
                  <stringProp name="Argument.value">ABC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billToLastName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billToLastName</stringProp>
                  <stringProp name="Argument.value">XYX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billAddress1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">order.billAddress1</stringProp>
                  <stringProp name="Argument.value">901 San Antonio Road</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billAddress2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">order.billAddress2</stringProp>
                  <stringProp name="Argument.value">MS UCUP02-206</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">order.billCity</stringProp>
                  <stringProp name="Argument.value">Palo Alto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billState</stringProp>
                  <stringProp name="Argument.value">CA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billZip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billZip</stringProp>
                  <stringProp name="Argument.value">94303</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billCountry" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billCountry</stringProp>
                  <stringProp name="Argument.value">USA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="newOrder" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">newOrder</stringProp>
                  <stringProp name="Argument.value">Continue</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_sourcePage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_sourcePage</stringProp>
                  <stringProp name="Argument.value">${C_sourcePage_2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">__fp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.value">${C__fp_2}</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:53:11.025</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Confirm" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Order.action-312" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${JPET_STORE_URL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="newOrder" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">newOrder</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="confirmed" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">confirmed</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="C_cardtype" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">C_cardtype</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&lt;td&gt;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&lt;/td&gt;</stringProp>
              <stringProp name="BoundaryExtractor.default">C_cardtype</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:53:11.025</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Signout" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Account.action-313" enabled="true">
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${JPET_STORE_URL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="signoff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">signoff</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:53:11.025</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-314" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <stringProp name="HTTPSampler.domain">${JPET_STORE_URL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-11-23T16:53:11.025</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Csv" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
            <stringProp name="URL"></stringProp>
            <stringProp name="RESULT_CLASS">org.apache.jmeter.samplers.SampleResult</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">_project_dir = vars.get(&quot;PROJECT_DIR&quot;);
_details_list = vars.get(&quot;DETAILS_LIST&quot;);

_order_type=vars.get(&quot;C_Selected_Category&quot;);
_user=vars.get(&quot;C_Username&quot;);
_category_id=vars.get(&quot;C_productId&quot;);
_pet_name=vars.get(&quot;formattedValue&quot;);
_item_id=vars.get(&quot;C_itemId&quot;);
_price=vars.get(&quot;C_Price&quot;);
_card_type=vars.get(&quot;C_cardtype&quot;);

FileWriter fileWriter = new FileWriter(_project_dir + _details_list, true);
BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);

bufferedWriter.write(System.getProperty(&quot;line.separator&quot;));
bufferedWriter.write(_user + &quot;,&quot; + _order_type + &quot;,&quot;+ _pet_name + &quot;,&quot; + _category_id + &quot;,&quot;+ _item_id + &quot;,&quot;+_price + &quot;,&quot; +_card_type);
bufferedWriter.close();
fileWriter.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">1234</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="-2063843150">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff|woff2)</stringProp>
          <stringProp name="0"></stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8-268" enabled="false">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;en&quot;,&quot;gl&quot;:&quot;IN&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20240730.01.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CLLKuLUGEI2UsQUQ9YaxBRDJ5rAFEI7asAUQpcL-EhCWlbAFEJajsQUQiOOvBRD_iLEFEIOFrwUQiIewBRDb_rciEJT-sAUQufiwBRCq2LAFEKiSsQUQ1YiwBRDhvP8SEJrwrwUQt-r-EhD68LAFEI-UsQUQ65mxBRCZmLEFEJfA_xIQ6-j-EhDZya8FELDusAUQ5fSwBRCkpbEFEKKBsAUQ0PqwBRDQjbAFEOrDrwUQtbH_EhDj0bAFEK-hsQUQppOxBRC9tq4FEKiTsQUQntCwBRD7lbEFENbdsAUQ9KuwBRDrk64FEParsAUQop2xBRDBpbEFEMn3rwUQqLewBRDZpbEFEMr5sAUQqKexBRDM364FEPyFsAUQvYqwBRCSnbEFEKaSsQUQ0-GvBRDvzbAFEL2ZsAUQg7n_EhCQkrEFENqgsQUQt--vBRCUibEFEN3o_hIQqJqwBRDx7LAFEJTxsAUqGENBTVNEQlVQLVpxLURQemQtZ3NkQnc9PQ%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0&quot;,&quot;screenDensityFloat&quot;:&quot;1.25&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;https://www.google.com/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1722688826536,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;BIk_hHIq0kBNu6N1&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;3572&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;MiWuZpmFBe284t4P_vndyAw&quot;,&quot;clientCounter&quot;:&quot;28142&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="X-YouTube-Client-Version" elementType="Header">
                <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                <stringProp name="Header.value">1.20240730.01.00</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://www.youtube.com/embed/?enablejsapi=1&amp;rel=0&amp;autoplay=0&amp;playsinline=1&amp;expflag=embeds_enable_muted_autoplay%3Atrue&amp;fs=1</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                <stringProp name="Header.value">CgtJZE9KdTdSUTNxSSiyyri1BjIKCgJJThIEGgAgMA%3D%3D</stringProp>
              </elementProp>
              <elementProp name="X-Goog-Event-Time" elementType="Header">
                <stringProp name="Header.name">X-Goog-Event-Time</stringProp>
                <stringProp name="Header.value">1722688883269</stringProp>
              </elementProp>
              <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://www.youtube.com</stringProp>
              </elementProp>
              <elementProp name="X-YouTube-Client-Name" elementType="Header">
                <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                <stringProp name="Header.value">56</stringProp>
              </elementProp>
              <elementProp name="X-Goog-Request-Time" elementType="Header">
                <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                <stringProp name="Header.value">1722688883269</stringProp>
              </elementProp>
              <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                <stringProp name="Header.value">dt=1722688822721&amp;flash=0&amp;frm=2&amp;u_tz=330&amp;u_his=2&amp;u_h=864&amp;u_w=1536&amp;u_ah=816&amp;u_aw=1536&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=0%2C0%2C0%2C0%2C1536%2C0%2C0%2C0%2C0%2C0&amp;vis=2&amp;wgl=true&amp;ca_type=image</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                <stringProp name="Header.value">330</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8-269" enabled="false">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;en&quot;,&quot;gl&quot;:&quot;IN&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20240730.01.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CLLKuLUGEI2UsQUQ9YaxBRDJ5rAFEI7asAUQpcL-EhCWlbAFEJajsQUQiOOvBRD_iLEFEIOFrwUQiIewBRDb_rciEJT-sAUQufiwBRCq2LAFEKiSsQUQ1YiwBRDhvP8SEJrwrwUQt-r-EhD68LAFEI-UsQUQ65mxBRCZmLEFEJfA_xIQ6-j-EhDZya8FELDusAUQ5fSwBRCkpbEFEKKBsAUQ0PqwBRDQjbAFEOrDrwUQtbH_EhDj0bAFEK-hsQUQppOxBRC9tq4FEKiTsQUQntCwBRD7lbEFENbdsAUQ9KuwBRDrk64FEParsAUQop2xBRDBpbEFEMn3rwUQqLewBRDZpbEFEMr5sAUQqKexBRDM364FEPyFsAUQvYqwBRCSnbEFEKaSsQUQ0-GvBRDvzbAFEL2ZsAUQg7n_EhCQkrEFENqgsQUQt--vBRCUibEFEN3o_hIQqJqwBRDx7LAFEJTxsAUqGENBTVNEQlVQLVpxLURQemQtZ3NkQnc9PQ%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0&quot;,&quot;screenDensityFloat&quot;:&quot;1.25&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;https://www.google.com/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1722688883457,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;BIk_hHIq0kBNu6N1&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;60494&quot;}},{&quot;eventTimeMs&quot;:1722688885592,&quot;finalPayload&quot;:{&quot;csn&quot;:&quot;c8lFUkKLL5bgiqOp&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;62629&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;MiWuZpmFBe284t4P_vndyAw&quot;,&quot;clientCounter&quot;:&quot;28143&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="X-YouTube-Client-Version" elementType="Header">
                <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                <stringProp name="Header.value">1.20240730.01.00</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://www.youtube.com/embed/?enablejsapi=1&amp;rel=0&amp;autoplay=0&amp;playsinline=1&amp;expflag=embeds_enable_muted_autoplay%3Atrue&amp;fs=1</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                <stringProp name="Header.value">CgtJZE9KdTdSUTNxSSiyyri1BjIKCgJJThIEGgAgMA%3D%3D</stringProp>
              </elementProp>
              <elementProp name="X-Goog-Event-Time" elementType="Header">
                <stringProp name="Header.name">X-Goog-Event-Time</stringProp>
                <stringProp name="Header.value">1722688885597</stringProp>
              </elementProp>
              <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://www.youtube.com</stringProp>
              </elementProp>
              <elementProp name="X-YouTube-Client-Name" elementType="Header">
                <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                <stringProp name="Header.value">56</stringProp>
              </elementProp>
              <elementProp name="X-Goog-Request-Time" elementType="Header">
                <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                <stringProp name="Header.value">1722688885597</stringProp>
              </elementProp>
              <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                <stringProp name="Header.value">dt=1722688822721&amp;flash=0&amp;frm=2&amp;u_tz=330&amp;u_his=2&amp;u_h=864&amp;u_w=1536&amp;u_ah=816&amp;u_aw=1536&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=0%2C0%2C0%2C0%2C1536%2C0%2C0%2C0%2C0%2C0&amp;vis=1&amp;wgl=true&amp;ca_type=image</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                <stringProp name="Header.value">330</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-270" enabled="true">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://www.google.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8-271" enabled="false">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;en&quot;,&quot;gl&quot;:&quot;IN&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20240730.01.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CLLKuLUGEI2UsQUQ9YaxBRDJ5rAFEI7asAUQpcL-EhCWlbAFEJajsQUQiOOvBRD_iLEFEIOFrwUQiIewBRDb_rciEJT-sAUQufiwBRCq2LAFEKiSsQUQ1YiwBRDhvP8SEJrwrwUQt-r-EhD68LAFEI-UsQUQ65mxBRCZmLEFEJfA_xIQ6-j-EhDZya8FELDusAUQ5fSwBRCkpbEFEKKBsAUQ0PqwBRDQjbAFEOrDrwUQtbH_EhDj0bAFEK-hsQUQppOxBRC9tq4FEKiTsQUQntCwBRD7lbEFENbdsAUQ9KuwBRDrk64FEParsAUQop2xBRDBpbEFEMn3rwUQqLewBRDZpbEFEMr5sAUQqKexBRDM364FEPyFsAUQvYqwBRCSnbEFEKaSsQUQ0-GvBRDvzbAFEL2ZsAUQg7n_EhCQkrEFENqgsQUQt--vBRCUibEFEN3o_hIQqJqwBRDx7LAFEJTxsAUqGENBTVNEQlVQLVpxLURQemQtZ3NkQnc9PQ%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0&quot;,&quot;screenDensityFloat&quot;:&quot;1.25&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;https://www.google.com/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1722688886495,&quot;finalPayload&quot;:{&quot;csn&quot;:&quot;c8lFUkKLL5bgiqOp&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;63531&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;MiWuZpmFBe284t4P_vndyAw&quot;,&quot;clientCounter&quot;:&quot;28144&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="X-YouTube-Client-Version" elementType="Header">
                <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                <stringProp name="Header.value">1.20240730.01.00</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://www.youtube.com/embed/?enablejsapi=1&amp;rel=0&amp;autoplay=0&amp;playsinline=1&amp;expflag=embeds_enable_muted_autoplay%3Atrue&amp;fs=1</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                <stringProp name="Header.value">CgtJZE9KdTdSUTNxSSiyyri1BjIKCgJJThIEGgAgMA%3D%3D</stringProp>
              </elementProp>
              <elementProp name="X-Goog-Event-Time" elementType="Header">
                <stringProp name="Header.name">X-Goog-Event-Time</stringProp>
                <stringProp name="Header.value">1722688886502</stringProp>
              </elementProp>
              <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://www.youtube.com</stringProp>
              </elementProp>
              <elementProp name="X-YouTube-Client-Name" elementType="Header">
                <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                <stringProp name="Header.value">56</stringProp>
              </elementProp>
              <elementProp name="X-Goog-Request-Time" elementType="Header">
                <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                <stringProp name="Header.value">1722688886502</stringProp>
              </elementProp>
              <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                <stringProp name="Header.value">dt=1722688822721&amp;flash=0&amp;frm=2&amp;u_tz=330&amp;u_his=2&amp;u_h=864&amp;u_w=1536&amp;u_ah=816&amp;u_aw=1536&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=0%2C0%2C0%2C0%2C1536%2C0%2C0%2C0%2C0%2C0&amp;vis=1&amp;wgl=true&amp;ca_type=image</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                <stringProp name="Header.value">330</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-272" enabled="false">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">collector-hpn.ghostery.net</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">  YX 5  RϬ &#x0; a  Jw   &#xb; x ?&amp;BΩ  w&amp; g4 %HH%&#x1e; Ê9 &lt; &#x6;s1 &#x1b;!&#x7;;   L B&#x7;&#xe; &#x0;Jߨ&#x17;MK &#x10;&#x18;&#xd;   VO 5&#x17;    z&#x12;W V&#x10; &#x2;  ! &#x5;I ۆ&gt;&#x1b;8   &#x1c; &#x1;. 	D7Eo  ,  k B&#x19;   &#x19;? &#x7;&#x4;&#x6; f9 SI K    !  K  󑘅   &#x19; ] z   @9  d  u*| &#x19; r!-&#xb;&#x19;I  &#x16;&#x16; ď f &#xd;
&#x4;G?y# &#xf;&#x0;  1 Z h  &#x5;  (&#xb; ֶ   &amp; A &#x92;m&apos;V &#x11;h&#x1c;  4 DÛ# &#x1b;&#xd;
     ПV   V  /pOh Wd 4 &#xb; w  &#x2; D h    5&#x1e; ˔  EH &#x10; k  ( v -   h $i  az - &#xc;   &#x1b;  J   &#x2; ]  ;  /&#x1f;  ex  B&#xc; @  Ij&#x1a;&#x1f;   O=&#x10; &quot; - ~ 5&#xd;
   cr   W&#xd;
&#x5; )  	 TÕ &#x14;4(   q &#x7f;m 3 v&#xe;&#x16; _ &#x0;  ֶL  j jd&#x7; 9.   Ѽn$&#x5f6; &#x1e; &#x1c;3s] 1q &#x2; r&#x2;a   :r  &gt;t ϴ W &lt; y    E&#xb; B , ^   s &#x7f; tY3   ݞ3&#x14;p9     !  f j u &#x11; G  |  ? &#x1c;V&#x6;L  &#x14;   _| {: g \  h w&#x12; µ x P8  9  C   &#xd;
o4ƕ &#x6; p0   ]&#x1f;-&apos;;  y&#x5;   L0  &#x0;D P A  .    b[9&#x16;u  T &#x1f;&#x1e;k I 6  &#xb;~&#xb;$ 2 7   &#x10; D&#x1;Ƀxg 9,   9 &#x14; | ňq#   &#x1e;&#x10; 5 &apos;j{rM&quot;l /` G m&#x6; DLɖ?&#xd;
r* &quot;  $ .   &#xf; &#x10;&#xe;  t&#x1d; &#x2;S $  ߍX      &amp;  3~~ָ &#x3;l&#xc;R &#x1;&#x6;oB   %&#x2;&#x10;hn2   J&#x15;  52 &quot;疩g &#x1d;  ;	T&#x19;FJ5Z+P&#x8; &amp;3y2`9  - ͭ &#x19; W76 &#x11;  &amp;  `d&#x1b;B^ WJ &#x1c;в&#x8b;4 Y &gt;a|8z &#xd;) B ;&#x6; &#x3;&#x1d;  M&#x13;&#x1b;F ?w9U    Ģ n   D m  \   ۝  ,&#x7f;  &#xd;
&#x7; N:&#x18;   p|y&#x14;&apos;  Ҽ    C c ^Y 3=&#x12;] &#x1a;&#xe;.Jp!&#xb;͛   +~  &#x7;C&#x18;  Y HK   [ &#x1e;~&#x1e; &#x19;  Tw&#x1; &#x7f;&#x1f; &#x1b;&#x14;   ZoŢ&#x1e;&#xe;  6  뮯  ~_x NX       Zm[ p ˸d 2 P -&lt; .#X&#xd;Z nQ   m Sw&#x8;T Q y #	u  &#x1f;1V&#x5;kI &#x19;  _C   &#x11;aTkήc    &lt;  a&#x14;   *r&#x12;T,&#x14;&lt;    oT)  &#x1c; *  a w&#x17;ܠ&#x0;@ &#xd;
  IR eu} &quot;9S    5&#x1a;}&#xd; &#x5;pl  bt&apos; |y&#x1d;  #l  &gt;   ] % l3t&#x14;   &#x13;T &#x1d;y&#x14; &#x13;    Z &#x16;  $T 퍾&#x6; 9BY&#x3;z   7&#x1e; e  R&#x7; &#x13;  e &#x4; CB&#x15;+ &#x1d;@쫀o =    +)0 y z2ᢹ k&#x17; &#x1b;  &#xe;  _     뗒^ h&gt;9&#x10;m  ߁  xO3B{   P  ݡ&lt;&gt;^N[Q   | #&apos;qL5Eo   #=([  7  ѫPL\ &#xb; 	;[  o  &#x16; Zx Lݎ T&#x1f;&#x10;  &#xd;  &#xd;ؼ  Ul  &apos;&gt;   o  Z &#x8;A  ʹ)&#xc; 2w8  f5  Ju) F n )  ?  T    椤:w  W !PҦY&#x17; (U  f E  &#x12;p&#x0;|C &#x18; &gt; ~e&#x10;N}   /7~    { &#x8;&#x18;0O &#x1d;э Ua 4 = Ķ: A&#x5; 9 &gt;  &#xb;&#x7f;OE &#x1b; Yl&#x18;[ p &#xc;_ 1 1&lt; &apos;  ^ &#x1d;   &#x1a;&#x1f; Y  )4&#x11;    &quot;,    7  &#x18;5}ml &#x2;H ~ ! _d|Q  &lt; f  Ԉ.&#x12;`&#x3;N4P    5 C&#x1a;W &#x11;&#x17;&#x13; vP  &#x1d;  s\#&gt;   &#x5; ɯ \ W &#x1c; H &quot;=)   }  g6&gt;d_&#x12; &#x0; _ Ab n(J ӵ   p M 4뽬Ȫ O=Ћ    Q  Bf ֘  OB     +!  Q˔  {&#x15;  %&#x2; &#x3;;? κi8&#x1c; &#x1c;ƃ C I   &apos; ,  &#x15;     `&#x3;&#x1b;&#x15;    d `  ˉަ ͈ &#x7;8 &#xf; ϧ2|   }onB&#x1e;&#xf; 15;  &#x7;y&#x14;?   &#x18;1䧭y]C. [ tG   |   a &#xd;
  ɿ,s&#x1a; : &#xe;&#xf;*&#x6;  &quot;FY_  &#x4; &#x14;D &#x6; 1? I &#x3;o P9  &#x15;&#x7f;&#x1b; !L|z&#x8;  3}q G  &#x8;Լ2  &#x1b;   &#xb;  &#x13;&#x7;  z| X ݵ\ % eo l5    th? f7,  dU 6 n . I&#x1a;  R י Y &#x1d; ˖ &#x4; &#x12;O   3ز&amp;Y 	  &#x19; + MӘ&#x5;% &#x13; R  n aa&#x4;     &gt; %  #1S稻 S Z&#x1c; &#x14; O  [X I {Ò&#x19;ԧ + &#xe;  t  </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="key-date" elementType="Header">
                <stringProp name="Header.name">key-date</stringProp>
                <stringProp name="Header.value">20240803</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=4</stringProp>
              </elementProp>
              <elementProp name="version" elementType="Header">
                <stringProp name="Header.name">version</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="encryption" elementType="Header">
                <stringProp name="Header.name">encryption</stringProp>
                <stringProp name="Header.value">6gQX2WjS/0hxsoefAnsMZM7HEFRiS1Ud3br8DjnBcgluVogyLgCO9CvYGTG81h9uW5xTKoTUwF5De5ASil8CrfpBRyIkXolRyMhKF320</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/octet-stream</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-273" enabled="false">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">collector-hpn.ghostery.net</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">    ] &#x1a;v.  uwr k 0j +XT  -&#x7f;a  4 &apos;w1{   Ch) f K rh  V Ⅾ1  @   vb; ՆJ   ㌶  	&lt;&#x15;ٍ &#x6;  &#x7;W  ;c    KĘ  dC}   &#xd;   1:λ  &#x11;  뇦) &quot;å&#x7f; f  f ӄ&apos;&#x18; &#x8;  &#x17;/U&#x14;eksN&#x14;&quot; cI &#x7f; + t  &#xd;
c&amp;:E &#x19;   YRL  = z    &#x13;  | L&#x1; x h    d  &#x1d;?    ɔKW#7 T G b  &amp; W&#x10;  &#x1c;Q a  f  &quot; bT  Y2 &#x11;?&#xf;&#x1c;d&#x1; v n ] oXWy U &#xc; j &#xb;       ~F7   g % M# L&#xe;Ҩ w  tχ=q  &#x1b; &apos;  ! &#x15; ޝ&#x18;  &#xd;c   &#xf;&amp;q     k&#xc;   JŔIpi a  9L&#x18; &#x5;m ? x  &#x3; &#x1b;M&#x1f;~  &#x8;b&amp; &#x1c;E%&#x19; Ҙ2P&quot;&#x19;    \ z{ 7&#xd;
T΅ A&#x14;  &#x18;s&#x13;  Ae͊.    Z    N  ۷5b &#x13; &quot; Jx&#x1e;i EzK&#x7;  [ &#x17;&#x7; {&#x3;  &#x2;    ޜ&#x17;5&#x4; ho  &#x6; E`   `&#x7f;  ?F  F S`*    fp Q&#x14; }0 ɳUv#  &#xd;1 O  8 gy  (Y    z&#xd;k .  X V&gt;\! ؔ ZE&#xb;D jWI  -0g&amp;m &#x16;r&#xc; $]  3pJ     &#x10;u    8y &#x12;R[       &#x17; ` gi&#xd; 07 &#x1;0` ߡ&#x0;jư[w &#x13;  +&lt; d nY 2&#x1a; 1 7a Y iߏ9 ^   R {V&#x1b; g&#x18; A3/ (ͯ ^ &#xb;e   &#xf;u5  Ͳn&#x1c;&amp;     f &#xd;i 9Ɓ&#xf;&#xf; 飤g| Vm ~O&apos; x&#xd;
 -&#x16;&#x1; {   4  |&#x1f;&#x0;%  py}&#x14;E9&#x6;  g	 ;R  W f FƋ dCr &#x16;c jU{  &#x3;&#x10; &#x8;&#x14;Q;  &#x14;}K &#xb;    &#x0; Y&#xb; [  &#x3;&#x1c;&#x5;|  wbm  F 1 u&#x10;x%DL8 8  5&#x7;&#x1a; &#xb;  ~ŀ  &#x7ba;  P ʋ s;  T&#x11;z)Ƭ D    }f&#x0;AԝX&#xc;  % EOI &#xd; !&#x1;WSZ   &amp;  &#x19;P N&amp;&#x5; oL;n   &#x1a;  {Y &#x12; J _]_a    , ӫ:   &#xb;i&#x1; c&#x16; &#x1d;  W*   ~y  &#x1; a ɖ&apos;u &#x4;S u&#x0; Y ]     [ %X  L&quot;&#x1e;  S y  0  .t  ! u)]ٿ&#x1e;&#x6;   &#xc;[ &#x18;,  MքȚ&#x1e;    \ h  s O  e-&#x1c;&#x11; d&#x7;Jp &#x1c; t d F  B  &#x3;   Z+ƒ  &#xd;
 \U?&#x14; &#x1f;  z   cN  &#x5; \z2 Y) ϊ aEH&#x0;D4&#x1d; * \OEk  4&#x6; L   e  .G   oςQrF &#x5; JG&#x16; 0  &#x14; &#x7;  8&#x1b;&#x7; 4 &#x16; ҶE :   lv 1^ ν:91!&#x7f;0=&#x1f;  W4 ?  ~     &#x12;&#x2;zJ 5 &#xb;  &#xe;&#x19;  6p  둹&#x1a;˛ e   l =֝   |b AÆ  t1l&quot;    % Spф  ~[   7 K O&#xe;,Ȳut_ l Ꞡ@oN&#x3;&#x8;B  M $       \  &#x1e;  &#x1e;  r[ &#x1a;  J&apos;w  4  &#x13;  &#x1d;) &#x2;&#x1a;0Ik} d  d  	&#x0; L   &#x1; &#x4;&#x15;C   N    D~U&#x0;   ^$&#xe;C-   i &#x7f;  W e { 2 3 ES&amp;&lt;n S&#x1e; &#xb;   ? n  &#x1e;  Nb  .  % &#x1d; E&#x7f; &quot;  &#xd;
u)2ч  3S&quot;=K  Z ȥ[  Z`&#x14; &#xd;3 %   z ) &#x1e;&#x1b;B$͢&#xc;  &#x15;mׇZ2-&#x18;&#x5;=&gt;   dz  Ԅf &#x12; 1)   E&#x17;&apos;&#x1a; &#x0; u  ( c ahX   &#x7f;  ]&#x4; 5N &#x8;&#xd;S{ &#x11;  Q   V &#x0;&#x12;  O  &amp;: &#x1f;  M b &#x7f;Z	 ~ &#x1f;&#x4;J ɋ &#x1; n  : +   ˥ &#x1;* S &#x17;   &#x10;Jg ]Ea &#x4;)&#x14;%  k  &#x5;s A s &#x18;  ˪&gt; &#x11; Gu+&#xb;  &#x10;&amp;?  2&quot;    #ޣ re&#x16;   &#x8;I m] 7Q&quot; &amp;    &quot;d&#x1;&#x1; ͤ&apos;ȋ3   .n f&#xf;X&#xc;&#x17;w  q &#x3; |0 &#x14;I  &#x14;   &#x18; ي&gt;  &gt;{vˎ&#x0;*  &#x2;ϋK = &apos; } Z C&#x7; &#xd;
&#x7;}a    &#x14; ݨ&#x2;  	 1  C ˼(&#x7;\#&#x11;&#xd;
&#x10;lҨh *ܰ?M ~  [of  W ҋ -A ) t&#x1e; &#x7f;]0s  7 vɉ C    &#x1b;  &#xc;Y8&#x16;  M7 9E&#x13; T  ܈ȗ  t  &#x17;&#x1f;&#x11;   RU&#x1;Ж    =&amp;  &#xd;
&#x14; &lt; &#xb; %&#x4; z   r&#x1d;    r |ƶ  &#x7f;s  X&#x15;  *] x &#x1e; U :H  T D9 9&#x7; &#x1;} &#x17; c] S {  5 d   &#xc; &#x6;  f0.  +&apos;  +(  V  `  [ a&#x1f;  c&#x1f; V \&#x1f; ( СQJhv   G  &#x12;   %&#x10; &amp;   | v9 ;d  ~٬ ɧ     |  u%%   </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="key-date" elementType="Header">
                <stringProp name="Header.name">key-date</stringProp>
                <stringProp name="Header.value">20240803</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=4</stringProp>
              </elementProp>
              <elementProp name="version" elementType="Header">
                <stringProp name="Header.name">version</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="encryption" elementType="Header">
                <stringProp name="Header.name">encryption</stringProp>
                <stringProp name="Header.value">6gQX2WjS/0hxsoefAnsMZM7HEFRiS1Ud3br8DjnBcgluVogyLgCO9CvYGTG81h9uW5xTKoTUwF5De5ASil8CrfpBOLlOv8Q35PoOakrF</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/octet-stream</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-274" enabled="false">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">collector-hpn.ghostery.net</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#x1e;&lt;Z n 9z &gt;&#x12; &#x1b;`&#x15;  XEe E&#x1a;&#xb; &#x4;Tvl  [     &#x12;  QOR&#x18;&#x14; &lt;&#x19; L /N    NMP  c&#xd;
/U+ pr \ vr1   &#x16;  =&gt;3 qz    &#xd;
X+K x &quot;&#xe;^  Dq16 WE&#x19;6 &#x6;  [\ T t4 &lt;vP_ &#x8;H+q &gt;  &#x10;&#xe; b  5 5   M  &#x0;&#x15;    &#xd; e X &quot; &#x3; &#xd;
rc&#x19;   K &#x7;K&#x13;N&#x8; ᡋn_2&#xc;*f &#x1b;5  ) &#x19; &#x13;J BK[w H&#x18;   7Ґ x(k h l.  :&#x11;:   Y !  I H  &#x1e;Ԇ&#xf;/ 8 k { =     a   : 2  M (Z   U@Kc 96듟       &#xd;J 3S&#x18; W&#x1d;g{   3e &#x8;&#x14;  5ا  Y  &#x5;ę ߩ  c}w b5ո  ,س  &#x1e;}| C 9  ;   *   A &#x15;H  ǯ -  &#x0;v D  M \f[w! Rf@&#x11; dL 09  )&#xb;&#x11;l#  #Z &#x10; $`o&#x1a;H&#x4;hx   GоD&#x17;0   ƍ  . C    XD . `  &#xe;n&#x14;Gީ Qx; )  &#x1f;        ܟun &lt; h    &#x17;7&#x19; [ZD&#x6;a4  &#x1d;S C o!  &#xd;ٞ&#x15;9g&#x10;&#xd;
`&#xd;
  ñ&#x6;&#x16; Y G  s&#x18; Q`hH5 D&quot; &#x18;TEd     (   T$   &quot;3 &#xd;f  &#x3;   v y#zG &#x1d;l  Z d &#x0; &#x18;:&#x16; zҭ&#x14;IS&#x16;i&quot;  &#x4; ?(  R`&#x0;H7ܕ Đ:\    Rjý&#x15;&#xb; ] Q1Ѐ9  u u㡁@ lw&#x1a;&#x19; =k&#x1b; &#xc;r }r r     tR~N/ 1P c  Z&#x7f;  oD  -   &#x10; y&#x1c;&#x6; 4 k ]  X&#x1f;9ŭJ&#x1b; .nD /  ∺5%k $  p &#x8;*R j&#x8;TSXQҁw&#x18; ڄi }     &#x7b3;B z&#xc;Չ &#x1d;±&#x0; &#x13;2&#x3;&#xd;
2  B  &#x16;Nt i&#x1d;&#x4; vr S LJ&#x1e;8  &#x6; d &quot;&#xb; 1&#x3; ;W+  &#x4;&#x383; U&#x17;&#x1e; &#xd;a&#xd;
&#x13;   z %mc C   ,)ur ?G@z  t  &#xb;   * &#x2;Z s i  5  &#x4;l]&#xd;4F&#x3;K} &amp;h R&#x14;X^G  &#x4;UC&#x18;w  c#  h(  *N&#xd;a~6؀    &#x7; &#x1d;&#x19; } &#x13;&#x17;Im   D  F ~`  Tr&#x19; &#x1;  !D ٧h m ?B6B( &#xf; ƃg j&#x13; M: ^] &#x99; &#x11;&#xc;  c _z ɠ &#x1;xM   C&#x16;  M U      =  &#x12;t &#x1d; # ػ }t&gt;&#x13;    u C2R  &lt; ԇBM&#x11; mFye     X g Z) &#x7;H /s V	&#x14;6&#x8; l|&#x1;I^   &#xd; kؒ &#x1b;   E- q   Ȟ   f 7 &#x1d;     Gu \ &#x1;&#x5; -  C&#x10;(&#x0;k&#x1a;&amp; f&#x6;Buq n =&#x2;  &apos;G  -a  s{   bA&amp; : 	&#x2;&#xf;H x &#x13;  P  # l &#x18; &#x17; c   nky⟑&gt; Ǆ&#xd;
 :\a &#x15;ҡ f W        &quot; $] l&#x15;t ߘ)   [f&#x4;N  T&amp;&#x8;,`L 3K1 E ܊ G &#x8;  &#x1b; Q&#x1;mB 9y&#x1e; ]Ҡ)   b &#x17;  A. *   &#x0;N   qJ &#xe;\ׂ l	 , &#x7f;&#x6;N&#x1e; 3&#x2;&#x7;;   &#x8;|QS /  ^ &#xd;&#x8;N ~+  ڢ&#x7f;  &#x1d;   &#x3;N% H  &#x2;-@   E &#x7;  ;   %  nqiS&#x8; &#x15;X &#x5;  &#x7;&#x19;|`=Na    X|w&#x17;  Ğ.z &#x16;~e&#x7;Nb&#xd;
  p     x  g&apos;  &#x1;9&#x1;  k暼$ F   CWҭ     &#x7f;+ &#x1b;Ļ &#xd;
 ǟ  Ы E i&gt;.&#x1b; E Zc&#x7f; X@_ O&#x14;&#x15; g  k  XH u  ț/3   0^Ju X{&gt;( $&lt;  &#xb;  &#x1f;&#x3;1&#x2; ޡ &amp;9  { !&#x12;X fy $?  &#xc; &#xe;&#x1;  &#x19; 9 a   &apos;   &#x1d;&#xb; &#xb;Zp&#x6;֢\o  &#xd;,-  &#x7f;&#x7;` h i&#x1c;M&#x5; &#x4;   ~ D   \GĿc Ql\D&#x8;4&#x1d;R [~ Ձͷ   0   0 ێ &#x5; =   &#x1a; ) 4  &#x1a;    e  p &#x19; &apos;1] R  i &#xc;9Nz   e  &#x16; &#x17;   , :  *r *9y2  A  &#x1a;  e j    G i &#x6;&lt;zg ) &#x1b;T  N  kR &#x2;&#xe;5 f(&#x14; p  &#x7f;  cY&#xb; v ]~ ¼㼇(_V&#x1f;*  T&#x6;  ?o M f O  &#x4;   f 7&#xb;    &apos;   &#x16;#Y+{oE     &#xd;   ^m  6   $F&#x1c; `  &apos;ݧ &#x2;*  &#x5;uq eD     2  h   K A&#x1;  5&#xe;   &#xc;D aeh&amp;   &amp;G&#x16;    s&amp;&#x5;A,D Ǐ&#x1b;&#x6;  [m*&#x10;`E {T &#x2;R u0 `&#x0;  &#xf; &#x0;r7 W  s&#x1d;g &#x18;e&#x4;  X*&amp;&#x7f;d     0hG &#x12;a  4&#x1f;H ;&#x5; &quot; e&#xb;L  ռ eI1       8@1  &#x12;   &#xe;7 N&#x1; vIؚ&#x18;_&#x5; N    B X &#x17;9&#xc;~D </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="key-date" elementType="Header">
                <stringProp name="Header.name">key-date</stringProp>
                <stringProp name="Header.value">20240803</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=4</stringProp>
              </elementProp>
              <elementProp name="version" elementType="Header">
                <stringProp name="Header.name">version</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="encryption" elementType="Header">
                <stringProp name="Header.name">encryption</stringProp>
                <stringProp name="Header.value">6gQX2WjS/0hxsoefAnsMZM7HEFRiS1Ud3br8DjnBcgluVogyLgCO9CvYGTG81h9uW5xTKoTUwF5De5ASil8CrfpBC4QVc2Y+E34cwiuA</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/octet-stream</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-275" enabled="false">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">collector-hpn.ghostery.net</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">E  jk4&apos; 3  T&#x16;&#x16;  &#xf; &#xc;2H6   &#x7;F  ٪G&#x1d;    bn  &#x7f;   &amp;e I T	&#x1f;5=   &lt;y&#x7; &#xc;`&quot;&#x4; P  ȃ &#x5; 1 4 a	  &#xe;mcl &#x12;I7|% S p&#x14;)  I&#x19;  &#x1e;&#x7;Xx   c {5 $  3  k x&#x7f;-**   &#x1;Sʘ&#x8;řĞd% nK   gW    &#x16;{   2 &#x14;i  K|Y&#x13;$@    &#xe;o /^-r &#x17; R&#x2;&#x7f;9 -  &#xd;Ok&#xd;NzR G  	!b v3 &#x10;  !g   &#x6;&#x1e;  p#h Ԍ &#xe;	 ځȵ&#x15; &#xb; &#xd;   [ v&#x17;&#x1;  &#x8; &#x7;y&#x1d; Ҕ    q&apos; x B  o@ &#x13;   ] \͊ 5^&#x19; *   &#x6;&gt;&#x15; y) ٟ&#x7;&#x2;% s5 ` f  &#xd;
ֵBBY +I&#x1;  K0 d C  &#x0;  ڤ  &#x1d;$b  2 ]* |&#x1;r!  ifE  _&#x7;&#x3;,@NB1. q &#x1b; { @b%Q &#xd;
1J &amp;h&lt;^ h s&#x6;&#x1;x i  c,C J&#x11;t   ĄH&#x16;  5&#xe;  $JE  小  pN&apos; ou  p f RwI&amp;o )X(  Pߦ  &#x8;j &#x1b;4c$]&#xe;I֍A% v #o  [-7 ]&#x7;:  \  G ̋G ) E &#x15;۬+ &#x1e;Q &#x19;&#x2; J&#xb; uT !3 2Ѭ&#x1b;c   x&amp; 1   &#x1c;     &#x15; S 42 iToc   K1  &#x1;&#x1a; &#x11;] 6 WI v^Et W &#x12;#   բ +(@ &#x1a; G k &#xf;8U I  T)  	\&apos;   i   k &#x13;  k  J! 3&#x1b; X &#x3; &#x1a;9q&#x17; &#x7f;Q&#x14;S O  *  ;F&#x17;&#xb; &#xe;&#x1b;  w갠 HP&lt; Z  6  .&#x1c;   ,ֳc$  D M&#x3a2;T	A&#xb; ץ ^ &#x7f; 8&apos;߀ G8   &#xd;
 6  [ , ~  0 m /{ &#xd; p Q o Ձ毳.     `	TаCv   &#x19; E&#x7;&#x11;  uOb4 Nu&#x0;db&#x8;0&#x11; j      3  r  &#x13;y   O     . T# &#x10;W    ?B   m  z v% * # &#x1;i&#x18;ǫ &#x1e;Χ  tT   &#xd;
 e  oH|q-M+&#x7;_oϣ 6` &#xc; 7  j B ,I  / &#x12;&#xc;  .  [ eXw  q櫣 N&#xd;
  k&#x1c; &#x1;&#xd;
&#x5;-RL&#xd;
D ^a  c }( &#x17; tƜŚ4  &#x1d;E(&#x5; &#x16;  -  &#x2;  )&#x1b; k &#x4;&#x8;i &#x0; &#x18;w6}  &#x8;Y&#x19; &apos;&quot; =k1e&#x11;  ]ϔ[! S T w y &gt; AZ[6  &#x10; 4&#xc;y  4&#x1d;  [5 &#x1f;&quot;   _a ys a&#x1d;  Mق &#x19;  릔  a xJ  ? 1&#x17;&#x11; !e  { b&apos;  k  &#x7f; h MqB &lt;x &#x15;    &#x18;S &#x17; &#x7;  a?o} oNb&quot; ZQ 2 1 &#x1d;&#x0;M /  p 2I  	 u ZV&#x4;&#xf;ԫ &#x15;&lt;Ufl  LH^ - &#x18;&#xd;
WIv 2   ͯ +&#x18;C&#x1b;    &#x1f;    p|o h &#x1f; Â5 p |    k _e  &#x1b;&#x8;&#x0;  ء  ]l&#x0;_$l&gt;%a  &#x14; 0 &gt;&#x1c; &#x10;/  ie H  / h  in] #&quot;[ ^ &#x81;?y /* &lt; N ӦP;$i ۹  G6 ˼&#x6; ~ د&#x0; &#xd;l )+ͽ7  W  &#x16;   - 0   н  k]&#x19;^   &#x1f; FA &#x13; 6 iK&#x15; bc  p    &#x1e;. &#x1b; &#x10; ? &#x2;\\   &apos;b l X&apos;   &#x4;佹 ϼ#&#x11;B us&amp; (&#x12;`2&#x2; a   Z bF 4R `  &#x11; &#x3;S  c LN  :  #  =Gj    # &#x11;S}  ]xNF &#x17;@&#x1b;n:  &#xc;&#x19;9cc v ~  :&amp;&#x19; _ Wu O&#x12; pIZw o  &#x19;xbi&#x1b; !  &quot;q  L  ]&#x2;p   b &#xd;
. &#x13;I&#x4;O&#x5;O &apos;  m/&#x11; 3&amp; &#xd; &gt;k  ϣ&#xd;   슘&#x6;RDs   &#xd;
@ڑh   8   OtX&#x16;cA   &#x1d;2JFJMQ zô|0 &#x2; R&#x7f; N&#x1d;&#x1f;D   t V c  \&#x5f7;( &#x1d; :rR  `r \r &#x11;!  &quot;a oB&#x1a;P&#x2;S O Sn  &#x1d;.   Rg (=Uf?i&apos;&#xf;  R *2 I~I=&#xd;
&#x8;$R &#x1b;	&#x6;P  7u  J   ]  R O! # N  P Pc &#x11;h~  P [&#x4;7 &#x12; { 	Z  |[ ^&quot;  4 W{&#x2;zb ߸&#x1e;l X  &quot;     &#x11;&apos;+   &#x2;#e C X  Hp   -ӋE|B(&#x0; .K [r&#xf;~  7 &#x1;Z&#x2;{ ٨ C kWZ&#x7;&#xe;8Q 5 m Ǎ&quot; NJ  ɴRQ Z  &#x1e;ڞ&#xf;     ҋ |  &#x4;*A&#x19;A/|&#x10;?o) 6=^K/h #!m &#x4;  y%   %  mo&#x3;&#x13;1iQlkdf &#xe;b , $ &#xf; &#x10;J  X&#x2;)o &#x17;*  O &#x14;:  V  c&#x13;9  S &#xf;o   ;C Z   O&#x6;] 14\ Z&#x2;1L{˘|b&#xd;
[ P  &gt;t{ 3 { &#x2; F O*   0V s&#xc;؅ Fv&#x8;Dş,&#x17;ie     K&#x11;&#x10;h0&#x6;sCu&#x15;&#xc;hS&#x18;  </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="key-date" elementType="Header">
                <stringProp name="Header.name">key-date</stringProp>
                <stringProp name="Header.value">20240803</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=4</stringProp>
              </elementProp>
              <elementProp name="version" elementType="Header">
                <stringProp name="Header.name">version</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="encryption" elementType="Header">
                <stringProp name="Header.name">encryption</stringProp>
                <stringProp name="Header.value">6gQX2WjS/0hxsoefAnsMZM7HEFRiS1Ud3br8DjnBcgluVogyLgCO9CvYGTG81h9uW5xTKoTUwF5De5ASil8CrfpBCQ6Czenp/6V+6sWt</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/octet-stream</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/canonical.html-276" enabled="false">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/canonical.html</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/success.txt-277" enabled="false">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipv4" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">ipv4</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=4</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/success.txt-278" enabled="false">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipv6" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">ipv6</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=4</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/update/3/GMP/127.0/20240606181944/WINNT_x86_64-msvc-x64/en-US/release/Windows_NT%252010.0.0.0.22631.3880%2520(x64)/default/default/update.xml-279" enabled="false">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">aus5.mozilla.org</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/update/3/GMP/127.0/20240606181944/WINNT_x86_64-msvc-x64/en-US/release/Windows_NT%252010.0.0.0.22631.3880%2520(x64)/default/default/update.xml</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/chains/202402/aus.content-signature.mozilla.org-2024-09-02-22-40-36.chain-280" enabled="false">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">content-signature-2.cdn.mozilla.net</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/chains/202402/aus.content-signature.mozilla.org-2024-09-02-22-40-36.chain</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/telemetry/407fc54a-dd5d-4969-a21e-46d9fd5ef9b0/main/Firefox/127.0/release/20240606181944?v=4-281" enabled="false">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/submit/telemetry/407fc54a-dd5d-4969-a21e-46d9fd5ef9b0/main/Firefox/127.0/release/20240606181944?v=4</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#x1f; &#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
 n&#x1b;K ( + .z &#xf;OTe, &#x19; f  h ϒ &amp;   j4 &#x14;  ئH&#x16;&#x17;/U00&#x1f;1_8_2g \ dR  nt  :  ̈8q    &#xe; ?f  Çd49&lt;:&#x1c;&#xd;  z    Ic8 &#xd;&#x1b;&#x7;q# *m `&#x18; &#xe;  6     &lt;M    4Y &#x17;  mË&#x1a;  R  Uo|u b gx k:_   o  a2  G&#x3;z    &#xe;   ~ L&#x7;  &#x1c;? =&#xd;
&#x1a;  WnV  =  z &#x17; &#x8;  ?M &#x7;|  h  N &#x17;?&#x7f; tx S&#x1b; &#x16; q    &#x1f;    t&#xe;7Χ&#x7f;&#x1d;  	܂&#x7;        g  C f   &#x7;   :   &apos; I:   t &amp;   &apos;|&apos; 1 &amp;C\&#x14;L ֺ&#x18;=   9&lt;&#x1; {H&apos; &#x5;   .   &#x8;&#x17;&#x11; &#x18; Z&amp;   &#x1b;&#x5;/ . Q       r&gt; &#x1d; S &#x17;&#x2; n  \n M&#x7;_ !  &gt;   ̓  i     M  k&amp; [&#x1e;hM }c&#x3;&#x13;&#x1c;&#x1d;ގ  %&#xc;&#xf;31F  ;   &#xe;  9-&#x10;D t     d  &#xe;   &#xb;~ מ Hz5   _  &#x11;&#x0; &#x1b; &#x12;Y  &#x19;&#x0;    G  &#xd;
o   &#xb;?&#x5fb; ~   0p ݗ% oxYV G  ܼo# &#x7f;3 .&#x17; y2 &apos;  t p&#xf;(? &lt; &quot;@ &#x1f;  &#xb;  &#x13;q &#xd;?}; $  v &#x7f;E  &#xd;   F x Wڹ  &#x15;&#xf;S@ t(  ?&#x4;?  R   h2Z ӯ6&#xc;ֿ   &amp;w s e{ޞ&#x0;  W3   &#x7fc;Y ݥ  r &#xc;  &lt;ː } &#x18;&#x74c;    e&#xd;
Hk#&#x1d;  T? i&#xe;&#x7;X&#x1e; }ԑʞ  0   p &#x15;nD  O ^  &amp;  _ӫ  &#xb;܌4   t&#x0;  t f &lt;E    b   9&#x1f;58e0  lqL ֟e&#x18;&#xe; s3 ~[   EJT&#x8;  x4Y &#x3;8   ,  } g   ?    &#x1c;Xǣ&#x5; &#x1c;&#x3;&#x0;o  &quot;Ϳw &#xc;  π C &#x12;   ?L I&#x7f;&#x1; &#xe;c{&amp;&#x7f;&#x14;   &#x11;i8~H   &amp;0:.  Lnܐf  3 })&lt;&#x6; w_&#xd;`A &#x5;|  h&gt;  &#x17;a~ d  &amp;  g# X  l&gt; J Zf      , l &#xd;v |&#x1d;&#xd; x H&gt; c8 S@   f&#xc;d&#x8;p&#xe; ;&#x1;   Â&apos;w}w&#x1f;  &#x0; &#x0;    &amp; &#x8;أ &quot;| Q&#x15; &#x11;v 	9 sH`*  x _:D9: 6&#x1a;ޥ  a2  &#x7f; &#xe; - &#x19;L _F&#x19;@}  &#x6;   $]~  	&#x10;   ̬/{&#x1d;Z    r &#x0;( &#x8;X&#x15; F  &#xf;  P &#x1a; V  _Vi&#x7f;8E    #    t   &gt;&#x0;z#1    j\Ƃ&#x1d; c5  +   i&#x3;. +} &#x2;   , 1 ~ &apos;yU ٪     &quot;&#xd;&#x1c;&#x7f;c &#x1e;F A&#x11;W&#x14;&#x10; h )   ~&#x7; &#x13; &#x14;^ 6&#x1e; &#x1e;[  c HF !   6X  t    &#x2;|&#x1e;&#x1;&#x1d;  &apos;  t2 A8 6 ? y &#x7;g#  F&#x13; &#x0;( ݍ &#xd;$   G&#xb; &#x1f; [ M {&#x6;#P&amp; }(( GG&#x7;^| . 9@a &#x0; 3      + f&#x12; ~&#x1c;&apos; oɏE&#x7f;5&#x19;  1 ; &#xf; &#x1f;!&#x14;w ߏ&#x17;  l:_.    &#x6;ͫ  &amp;&#x5; &#x1;&#x5;z  { &#x12; ơ-   &#xe;   d0^&#xd; 8-V &#x19; h     D,X$Ȃ J g  , &#x3;f e }    &#x5;o V N o&#xc;ޫ &#x15; W&#x1d;4Ww%  &#x2;ފ	 X s&#x0;  =  Qr&#xc;&quot;&#x1f; &#xe;k&#x0;Fu  &#xe;$&#xc;&#x5; d       d4NnFc ` &#x11; D&#x3;h  !R1 &#xe; q&#x2;Lo  s-R &#xe; 1}8&#x16; &#x16;&gt;z&#xc; &#x1;&#x1; &#x12;A&#x1e;  $Q  ]w  &#xd;&#x1c;Ub# &#x1f;Ȯ  鸴k  &#x8;   ϕHW    I ј l0  m&#x7f; &#x7;  K&#x7f;1    (   ՝  &#x11; 3&#x7; &#x17;N |?   &#xd;        a &#x7f;H    &#x12;y ,&#x16;    D 	7&#x18;E2F &#xd;    &apos;&#x1; &#xe;  &#x1f;  &#x1;&#xc; U %&#x19;&#x2;; &#x7f;&#x1b;&#x1;5^-  dP:{S$ &#xf;  b D  qG&#x1;py Qp  0  &#xd;|&#x13;$ &#x5;iA  6A^ &#x13;UP&#x1b;&quot;d&#x5;`&#xf;&#x19;i o&#x1f;ÿ &#x13;D q? d  0h ) e&#x0;    ը&#x16;&#xf; ]&lt;X l&#x10;  &#x6;&#x6;ܥ tN&#x1b;K@ &#xe;x  ~&#x16; &#x3;&#x15;@   E:  &#x2; Ber _  &#x14;E  w &#x14;l&amp; &#x15;Ҏ    &#x13;&#x1a;7 2 ] ~ (,^&#x7;   &quot;ջ&#x1;&#x1d;     Q  &#x2;GY, &#x7; d (4oE 5  &#x1b; &#x0;&#x5;&#x12;6  ^&#xf; &#x13;&quot;s :&#x7;  &quot;&#x17;5s0#M: &#xe;G #8! S &#x10;   i   &#x4;  &quot;}&#x1f;  i   &#x18;$3&#x12;&#x6; o&#x1; ݠ &gt; u &#x10;u&apos;v &#x13;X&#x5;&lt;  l&#x1b;&#x1;   	  &#x15; )&apos;ۏ&#x13; E8  c&#x6;   &#x1a; &#x18;&apos; 	0և&#x14; &#x5;&#x1a;I:K , e jy&#xf;gy   |Iᤠ ec   %E 2ג ,W#  ` &#x12; &#x4;%%c L  t2  &#x6;,`    .Q   &#x4;?  }	&#x16;	 w2&apos; &#xc; &#x1b; &lt;    j D  M ?&#x7;  &quot; nڟ   1 q  O&#x16;01&quot;4    -&#x1b;w ) F  &#x6; &#xd;
#&#x1f; J     c&#x1e;  &quot; B  @   fw&lt;&#x1b;  &#x19; )G&#x4;&#x0; T o&#x19;=d ޜ    &lt;uf  Ûe&#x2;    -۫x  g&#x1d;   &#x16; &apos;&#x18;.  md&#xd;
  &lt; ߡ  /W &#x18;ޟ  &#x6;   &#x380;U a| m\,   p +&#x12;  &#xf;]&#x6;   !&#x7;    V7   ec!{ m&#x15; B &#x6;H _ҡ   &gt;|Ճ  t4 !&#xd;V    &#x14;t &#x3; &#x3;.G/ b  &#x10;   %H &#xf;hl &#x11;&#x1a; V&#x3;&lt;   1&#xd;
&#x11; v   &#x2;&#x1; \_ r&#x1f;͛ Q8&#xb;&#x1;  5D 4  %  ]e   O&apos; &#xd;S (  | &#xd;&#x1e;&#x4; &#x19;L   8 _ ׁu 3  2 w ~    Y  : 3$+    dȔ&#xb; &#x1e;2 3!l0&#x1e;! &#x0;q &#x18;M&#x7f; &#x0;    &#xd;
     -     &#x14;Q8  &#x1c;  P&#x17; ^?      &#x6;    &#x17;    p &gt;{ G &#x7;  &#x3;|?   &#x1;&#x2;    ˨  Nq }Vљ&#x1a; &#x1a;     Y  &#x18;&#x19;&#x1b;&#xc;+&#x7;E@mX   {ڽ&#xd;ș?	&apos;h &#x16;    [  &quot;  6  ƌ l c  +~ A &#x13;?&#x7f; =iȤ&#x1b;x.v &#x1;&#x1b;:k0Q   2         D:&#xb; &#x2; ;  .vO&#x2; &#x4;Huɸ   &#x16;` 2 7 @   &#x1e;6  o  [   &#x14;pq  &#x1;  f @ `&#x7;@  &#x0; sY g p&#x2;B      N p &#x1f; G&#x8;&#x1e; 	&#x14; ![=cC =&#x14; &#x1e;  &#x6;dO&#x12;mv  &amp;$,5rIv&#x17;h  -I \ &#x7f;&#x1c;&#x17; .&#xb;   e      ~ M &#x1a;QG&#x17;@S &amp; &#x1d;PgD   ` pH  o r9&#x1f; &#x14;R &#x18; 5f(( O ?~K&apos; &#x15; &#x7f;  &#x1e;nV  &apos;H&amp;ʟB&#x11;8 z&#xd;
%   &lt;&#x19;&#x2;  )M ~   f   NT ;    Tf%w&lt; 7&#x16;   dҿ&#x1;&#x5;&#x19; O:  =  &#x16; %&#xb;   $ a &gt;   [ &#x1;&quot;9  &#x6;[ L&#x7f;   {&#x2;&#xf;h(js&#xd;
 d  &#x0;    &#xe;  H-  y o &#x18;  %. WK$&#xe;}  库sNl _ wk &#x17;]-  ,|&amp;3&#x2;-Q &quot; &#x16; X &#x1b;b *   g   &#x4;  &#x4;I&#x12;v ?% &#x17; E/ J E   ES {0&#x8;}T&#x12;Т&#xd;? 䤡/&#x1;&#x3;$ P&#x10;    &#xf;F6   )ҭ   &#x18;    !  b  D:&#x7f;)  ,&#x6;  &#xc;O   &#x10; a e ,UE~&#x10;ÎN&#x7;K&#x10;l&#x16;K@ &#x7; Eѣ3&#x1d;,f8G&#x1d;  E2&#x0; &#x13; 7y&#xb;&#x1; &#x12;   u Ƞ Pў4F &#x19;  mR[q_ v ds䴁x;&#x18; Hu&#xb; v?!&#x19; o ڏ&#x11;p&gt;&#xc;&#x1d;&#x4;  V&#x1e;&#x0;# b  &#x3;  أ &#x8;/&#x15;] &#x3;  Krt &#x1;H9 &#xf; 2&#xd;
P      &#x17;B&#x5;_ B&#x1f;ſ&#x10; !V! &#x17;# &#x4; J &#x1;&#xc; &lt;&#x5;2  Z u &#x11;&apos; &#x8; #&#xf;u&#x1f;&#x5;衔&#xd;	 1^ LM ^G b &#x1f; 0)&#x5;&#x13;&amp;   눮5]   k&#xd;     : kC !^  &#xd;
 # &#x1f; uL  }  uD&#x5ca; c  tM 7  C   M   q- kx\ o&#x3; &apos; W&#x7;&#x1;yM ;F 3  i&gt;&#x16; 	G&#x2;q  &#x0;  F4 &#xe; &#x1a; ob &#xf; &#x14;&#x14;&#xc; ב kK 6&#x13; E ܐ + n z&#x10;m&#x8; &#x6;`c ϟ?3 ;  (&#xd;&#x3;&#x1f;`     Y &#x7f; 9;k \u    &#x1f;   u ER  &#x4;Q Ѳ  ,sA    C 5 du   ԑB ῃL  W I !  r5R  C v&#x1c; &#x7f; d &#x3;P!  &#x7f;&#x1; &#x8;K ȱ t&#xd;
&#x11;&#x1f; C &#x4;  -   &#x0; Y &#xe;   /?D9&#x1d;       &#x5;.   jsY fYV k *-Jӓ &#xc;t  2|Z&#x6; &amp;`&#xe;&#x14; ͘   3 9  N   F  &gt;-  T &#xd; A&#x10; 烓 4I  hy     S&lt;  &#x3;Z uhm &#x17; :OD D4M Ҧ | -MT1&gt;h    &#x1e; &#x13;&#x1a;	&#x2;           &#x11; º &#x17;  n }    F B &#x19;     f  4B F   ݈&#x11;= ^ R&#x14;   i Gϩ  Bd&#x10;  e&#x19;Dn`U 2    &#x19; n}o O߷    =X I   U  \  Ez &#x5; c  1&#x5;p   &apos;-&#x1a; s ~   B bB &#xc;+&#x1d;   C3 ^ &#x17; C n &#x14; &#x1d;&#x3;      ! i x&#x1a;U&#x11;   5fl    3  &#x12;  &#x5;^v[  nko Dɩ  &#xd; j g + L h 9t &#x1f; ?&#x14;    {&#xc;&#x1e;&gt;Ŵ &#xc; A&#x1; a &#x8; h 1 uF&#xc; R)~F a.,  &#x1d;    պ {    \  \ &#x16; &#x4; &#x14; &apos; `mn J [P &#x1f; &#xb; J&lt;  Z&#x14; &#x13;     e  j m3;&#x382;, O   G~o   ;FD4 &#xd; 	    aX@&#x15;  &#x1; o P   &#xd;
`&#xd;
wx       = =+&apos;5 x  T#K S&#xe; 뚏&#x5; .  &#x5;  &#x18; |% R@&#xb;	4-/ 3&#x11; &#xe;#&amp;Q \&quot;Ɯ /  }&#x1;  u &#x6;* f&#x7;&#x3;   M  x&#x1a;  z^. Y% A1  c mx &#x1f; &#xc;%Ϳia   g     6g  Oȧ% d  *&#x14;OH&#x19; /  &#xd;
 B   븃(&#x1f; &#x11; a4K &amp;&#x10; &#x11;T       p &#x0;A&#xf;  X  ؓ&#xb; iAe DDP&#x6;gEʅO&#x14;&#xf; m h &#x17; Z  &#x16;&#x12; } &#xc; &#x17; BW &#x1b;  &amp; yQV 1&#x1f; &#x8; 8 T} P&#xd;
 ,4T a K&#x2;&#x8; Ԉ&#x4;  @ &#x2;u6!	&amp;&#xc; &#x1f; &#xc;c&#x18;X&#x8;&#x6;h a f\  [   +  &#x17;L@   bk˲I&#x15;&#x1;Qt  &quot;  	&#x5;-  .Ƚ!  -  Ic &#x16;&gt;  &#x8;&#x1c;%  &#x4;&#x19;1@&#xd;
 &#x11; X %&#x11;B]`.&#x10; 1  p  ͢w &#x18; Z &#x11;D$ A  P	    }  h &#x8;oQj H&#x2;\	  B @-, &#xb; :F&#x15;Ɯ&#x2; , 2  i  궛g ?Ö&#x7f; j Kgt   +)9  V6 &#x11;       &#xc; s#&#xd;5 &#x12;    6  N  &#x2; &#x1f;! &#xd;
-&#x11;&#x11;  LWH&#x16;WA   &#x15; ɰ  # 6&#x2;  6  oq&#xe; &#x6;   #  O &#x8;2&#x13;   &#x16;#  :&#x1b; &#xd;
 .  &#x11;    &#x16;&#x15;@ &#x3; F&#x6; ,&quot;&#xf; &#x0; &#x1e;&#x13;&#xb;v &#x18; &gt;&gt;&#x7; Y04  !    $   x JǸa &quot;pn &#x10;&#xf;&#x15;  @&#x11;  XG Mc| t z&gt;&#x1e;v\   Xx &#x1f;[   +h#&quot; i?    C  fzi 8 &#x91; Uk_R&#x10;&#x6;l&#x5;* q-~ r|4&#xf;! &#x98;E H&#x10; Ě &#x17;  &#x4;Dz&#x12; %D &#x16;      I &#xe;+\Y  g( Ez &amp; &#x0;93  # &#xd; ԏe   F&#x1c;  @  *@ 7o&#x6; G~	   * 3  X4&#x1;/d JǑ0  &#x14;S    G6  &#x1f;#   &#x15;       &quot;&apos; 5  7b   S☱hCƊ~l  x 4   Ӿ SDD&lt;  %  ;(7 &#xc; چ&apos;!&amp;i/&#x10; &#x6;%#2&lt; 	2Ŀc&#xe; с&#x1c;&#x11;2  6  Y      e  ` &#x1e; ,J &gt;sD &#x19;&#x2;  &quot; &#xf;B U&#x1c;3C t( &#x0;E! &#x15;c&#x3;% 	&#x19;Fqm&#x1e;k3! 2  X+2  Q #\8o w    V }ں  k * |-F ( lP` &#x6;&#xe;vt $- j  &gt;G 2,%   &#xb;鈃  &#xd;
H &#xd;&#x5;&#xc;:6­  ) &#x18; Eq      ^W &#x13;k    P 3w@&amp;- e EG40w# &#xe;Yڳ &apos; &lt;O 4 ~Y&#x16;OA&#x4;b 1  (&#x12;  x l&#x11;P&gt;&#x1d; &#x17;  {}` &#x1f;Z  *5 ֺ&#x18;  # &#x1;_ضD $V   ,d !y	&#x10;&#xb;   &amp;&#x0;  E &#x8;}#&#x2; &#xd;
=  c  X&#x1b; @&#x1d;8@  2B c8 N    ] ? /N; * &#x12;  mk,  :Z_&#x16; _  y &#x1;  N&#x5;41ce  &#x3; &#x2;   &quot;&#x13;E  1(   I     Y- A    a&#x7; &#x16; &#x1f; z%  ذz&#xf;,E |  qT   ^ yv 9iV y  o=&#x4;  /&#x7;&amp; U  &#x1b;  &#x1d;tA b] &#x14; V&amp;3 zۦ    { D &#x1f;1  S D &#x13;栙&#x11;  v  &#x16; &#x15; )8&#x1c;  /$ZyN_  \5 @$  B y |  u   { I @   J&lt;&lt;k x)&#x12;&#x1e;O   &#x2;|_ &#xb;  /  &#x1f;&#xd;
  DK VV#JW gZ   )W &#x16;  E u &#x17;f [9 &#x11;X*Qv L  MB+  ʏD   Ck&#x13;f&#x12;ه  K&#x6;  E     [[ WkU*Rm &#x15;h&lt; 83w l Eg m  :  חO  . (+ e  $  d  |&#x16;Wg     i C  s0aX?&#x7;&#x1a;דqq 0 &#x1c;  &#x12;Q  ur  \ m&#x2;7%    qp    	&#x3; )N w  y &#x12; ݻB&quot;% ` &#x13;  )gS2 &#x1e; Y&#x10;&#x4;* a	   n  &#xd;
&#xd; H&#x1d;Z]  @B ]U  js ~f  J򶿉O   [6x     7 v  &gt;t A{o |@&#x1d;  wս   W 0ǕfA b u&#x15;SL F  )&#x11;p2  }qy} o   &#x13;d K    ^ 1J.  &#xf;V  u, ^ ` O AͰg - x*q   &lt;   &#xd;  n &#x18;  HL ?d     Z  Y`1O L&#x4;  X e&#xb;0 &#x19;  ! Pb1sXV#J :  xu ; 4 Z     &gt;   r7R&#xc;&#x8;&#xb;&#x1;Z| &#x18;ā  /9    &#x4;G 6    @ H!$ &#x7f;(|&quot;d &#xb;a&#x18;:&#x8;&#x1a;g Rbc &#x5;~ X 1R    &#x1e;&#x3; x&#xc;I &#x1c;  &#x1d;&#x1b;  1,&#x1d;0   &#x1e;&#x13;r~jq~ A &#x4;-P   ^6{ O  i u |{ Hg y  S&#x15; S  ^ { 꿽~ &#xe;ƽ |YE jHF  &#x13;&#xc; ! R&#x1e; .&#x6;&#x5;i  q   }    = 7  :  gg j gU &#xd;&#x15;sq^  l&#x4;,M  T  = G 92 ^ ]      1K  &#x10; u&#xe;l&#x1e;    &#x17;    _vz 6lo    ^4 z 1   8  颱e і 	 &quot;G9  y { $:&#x17;g i / b&apos;&#x1b;Si ^  &#x5;0X&#x2; i Jx&#x7f;&#x15;9	 Ŏ &#x1d;escj fq3  z &#xe;Dk&#x0;   L  7  &#x11; ]5 {   H   &#x4;  ė$j vN&#x6;+ | EwȌ xn&quot;rG&#x10; &#x8;3 9 鈷4  &#x1f;   0 7MXm - iOԃ  &#x16;&#x1b; &lt; &#x1b; bB      ڠ&amp;&gt;iV = ^A  &#x18; m  :kS   e      &#x6; G  &#x17;     *  %&#xd;
 v&quot; = &#x5; ^&#x1c;   &quot;  /|w &#x1b;&#x13;6[p  &#x14; 3] &#x1e;&#x16;}  &#x8; k m    ul &#xd;hl&#x0;#&#x12; c  Q &#xc;Z7, /&#x18;+ C̶&#x4;&#xd;
ɥ 1  @ *&#x16; 剃A	&apos;  &#x13; %Gx( O=9 |   v&#x6; CQ 0W  &#x5;&#x1c;  g͋ &#x2;  7 &#x1a;&#x12;  &#x1d; e &#x17;2 S . &#x2;QUt&#xe;񂐅 T&#xd;  E,&#x1a; b &#x8;&#x2; =4 2  d&#x12;]^ɺ&#x15;Y Q   &#x1c; BO     yN W &#x1a;,  ] ۻrƎw gO&#x6;&#xd; e#th&#xd;4&#x11;&#xb;&#x4;   [ 5&#x8;P  c&#x4;8V   &#x6; v  &#xe;8d &#x10;  &#xe;(&#x15;&#x5;qP A &gt;9k T&#x7;7 ;# pM  &#x1a;&#x5;Z J37 .&#x1c;vQ[|9%GYp&#x13;G  &#x8;  _d @  ň 8 &#xe;B &#x3;&#x13;&#x16;&#x17;8R&amp; &lt;  I	 d &quot;&#x7;&lt;  Pb#  L+p }&#x7f;;`? &gt;  4   M-lc =&#xe; j#&#x10; &#x14;&lt;Ѣ أ &apos;Z * @   &#x19; &#x12;&#x17;$ 7 ( 3 $   1Y 	B _p f  f T v   ؾx    E &#x6;@ &#x10;a	M  ` )2&#xf; &#x4; R y*1&#x0;(9 &#x14; B  &#x8;) &#xb;e&#x11;  /  &#x13;I+  G# J E  i&#xc; [ s  F0)4b   \D^&#x10;  2,&#xc; I&gt;&#x2;&#x12; Y  &#x4;Y  &apos; e&#x1b;D  &#x7; R &#x8;7?C   + v    &#x1c;)#^&#x13;&#x7;E &#x1e;Z&#x11;| }eh&#x16;  &#x4; V Ȗl E&amp;  ;&#x7;F    S  &#x8;F &#x1d; N  k )  O &#x13;a | 	O lB;Û&#x0; &#x6;  &quot;  &#x12; F j &#xd;
Q6ueޱ   &#x17;   &apos; &gt;  r  &amp;&lt; &#x12; [2O- &#x6;`v &#x1d;  9+H^&#x2; &#x11;@ &#x1f; _	   3 g &#x7;_&#x18; ` /  &apos;  @   &#x1; &quot;    X&#x8;&#x15;I`&#x6; G&#x0;  &quot; s Y7&#x1d; H&#x14;y ^  l 50 &gt;K   &apos;   &#xe;J  &#x6;  &#x0; &#x1c;   6 &#xe;   _ &#xf;w  &#x1d;P&#x13;  ?&#x5; 2c &#x13;qLGT  &#xe;Z &#x4;9 D&#xf;] o C &#x19;;B( &#x1e;    &#x12;  @9 9  bYbɀU&#x14;TB#  &#x0;i&#x17;n&#x11;:_ e  n   &#x4; &#xd;|x&#x17;O&#x15;&#x1b; ;c  XR&#x5; w]  &#xe;m  5ޚ  B f   &#x1b;&#xb;7,&quot; &#x379; &#x15; $&gt;&#x18;&#x1; &#x11;  k@۔ 2&#x10;i&#x7; &#x1c;&#xd;
/  kK&gt;   &#xb;fD.&#x2;     U !  &#x5fa;  绿s /    u4   M &quot;ӝ c  &apos; &amp; 	&#x16;Y &#x16;2f&#xd;2 ZϚ   &#x17; [?  =A&#x1b;~۰   eg  *  )  &gt; \N&#xc;    袮@  @+  S &#xd;
&#x6;  &#x1d;24k  :\&#x0; &apos;8o y c q9&#xc;^&#xe; * q16E&#xc;r )&#x10;ݝdCB&#x10; ͋ 9 &#x0;N ggo &apos;&#x1f;   &#x19;  g&#xe; 0 xl } L &gt; &#xd; : F މO   ?2  K F  &#x7f;   vI Q=         &#x17;y   &#x12; PL  ĳ\b&#x11;ⓧ &#x16;lN.R8  &#x19;V &#x3;64 &#xc;AC&#x17;&#x13;&amp;`h^    &#xe;&#x1c;&#x15;2     / f  \@L        {&#x6;Ą;  * $  &#x13; :  O)   T &#x0;c  f U^3  BϤP /  Z&#x1b;{   36Fa J  d E &amp;      x&amp;&#xc;h   &#xb; J a/&#x2;,   	&#x1b;1  `1 q g&#x3;+(  &#xd;
`Y +: y   KI&#x8;  &#x4;  ~ u {Oz-N z6  r2m DMѵ&#x1e;  Equ/&#x2;*m̎ &gt; E H 	Q 8q&#xe;; hZ&amp;   \-ҧ勵  eA&apos; xRȷ  \Q!  s ؔ =I ,&#x16;&#x3;q  &#x4;ua&#x15; o ޱ ,   ,&#x5; E&#x14; Q  &#x10; &#x1e;    ڿs ҳq1  &#x1d; &#x18;JX  ~p &#xf;   |*&#x17; &#x1d; my }    &#x10;= v u&gt; 8 C&#x15; Ğ    E &#xd;
G  .&quot; H   ;&#x1d;2    &#x1c;!7 &amp;??gD? 5   &#x1c;  C 0 &#x8;&#x1e;  /     &#x19;&#xd;
V Jt B[_&#x14;  &#x8; ~H]&#x11;  l 6* Ed c鼦 &apos;W   ,  U &#x6;v&#x1b;S ˨ [ ` 8B  Y   u 䆑  &#x12; &#x1a;  9#֒&#xc;a  m$3   A v=&#xf;   _w, n EV Z4 &quot;Rg&#x1e;&#xd;
&#x14; _&#x6; &#x3; kO p   ?&#x1b;  &#xe;w  5d&#x16;Ҽ  E OU     0 ѾX  9&#x5;  % &#x58c;  (&#xf; (b  B  a # &amp;? /N Co     [i vs6Mm_    , &#x6;&apos; h&#x1a; 3 z&#x19;  &#x1d;&#x1b; f  4  Ѫ  e Ԛs 2= wX  J yl_&#x0;,X&#xc;p&#x1f;{r  &#x17;Ac.kp u p  &#x7f;% &#x14;&apos;W kϜ 7&#x10;&amp;xѺ   ~ 7{ /NX^:  &gt;;E  ۼ 5ٸ&#x5;?P&#x4;Q &#xf;W     &#x11;[S6 l@ 	$  CJ  T `#lM&quot;     V  b &#x1e;W:  PҰ&#xb; h&amp; Bs  $ &lt; z&#x1a;&#x11;&#x17; QNc2&#x5;-  uD_    #$՞j  &#x5;F1 ʥ &#xb;v  S n&#x0;&#x15;0 &#x19;r- -  y}&#xe; -VfT%  &#x12; u&#x16;D  &#x10; | &#x15; &#xc;O*&#x18;    hǚ   2  Y C&#x2;/+  &#x19;&#x17;4  ^ &#x1;&#x6;  s  +G l 3&#x8;&#x19; a &#x13; ]  u&#x1b;   q[ x7&#x6;  &#x1b; P&#x4;KL&#x1a; ( 0 Q  2 O;&#xe;   svʯ  &#xb; 3  Z 	֥3[&amp;ck &#x1b;,[ F&#xd;g &#x7f;2  *&#x8;֫&#x14;m+rz  &#x1a;3 J &#x1d; TQ  ^&amp;bb /   k &#x19;&gt;S z(m  	 Z9wF &#x16;Y &#x3; ` z  fF % ;  ^   KU(   d     P?/ܱ k  sj  sJL&apos;H &#x1c;	# =&#x5; X uD	&#x8;O   Z  .L  &#x7;[&#x8;8քI~!i]  _ B ( &amp;&#x16;&#x5;ɬ# &#x16;d G %  &#x1a;r(A&#xe; &#x1a;  q1K ݗ c&#x5;7 8B 3&#x16;/ )&#x17;5 P H &#x4;df $7     5mm [K E   v 7 _ ~   &#x12;pK qo꯵ (  =&#x1; xҤ  &#x8;   &#x17;v! &#xb; D&#x11; g&#x8;Z Ϸ  &#x10;l  &#x2;ت8&#x3;  m &apos; &#x4;K  wT ; L &#xc; | M &#x8; qE  t&#xc;[&#x2; _%  &#x1c; ~VqV&#x18; )  &#x13;&#x1;  8M&amp; DA~ &#x1c;|  &#x1d;ց =  S  ch q   ]&#x1e;yWH%   &#x14;jo bX6Z&#x1f;d 3 B]/ fq&#x6;\  /$X &#x2; ו O &#x10; * &apos;&#x17;   &#x13;!A6&#x7f; ̗v I \ a  K~ &#xd;ƤK`ߐm&#xd;
&#x4; 0  &quot;  &quot;     &#x2;e   *0 &#x16; e &#x5;  4ҭ #Ɋ&gt;Z @  ֣?r   Y { 7  95 x Yg *   3&#xb;	&#x16;k m! H\   :&#x1;    ʤ Y &#xd;
|o &#x5;  &#x10;&#xb; ϳ Ց W  ^EP S*  f X )&#x7;&#x1e;I  &#x17;0L L BV     i&apos; yT  a   Z n   ]Ng   Dk kq  _ Kzn   i 	 w : &quot;&#xd;
 R :&#x1a;  ?%   &#x11; M   q ;&#x1e;&#x15;K&#x6;  o  v. 4!i  /    `   q v TP &#x19; #2 b@ &#x14;,6  %܌  y&#xb;Ӽ  p&#x4;  C fD?  k҂ [ &#x1e;&#x15; &#x15;  Am~ &#x2;  K  &#x3;  t +  b  Zw    #&#x10;H  &#x6;   O= x   6  } &#x1b;p   &#x2; {]&#x12;r&#x5f7; ,   {\  o &#xd;5.  &#x3;B&#xe;1 &#xc;&#xb;     &lt;uw&#x3; *  `g  )  ͟ 7 h ޥCj FⓇ )   s 2 ;  Y:X C  &#x1b;w; &#xf;N&#x6; &#x19;v      1Z &#x7f;&#x10; D 現&#x7f;&lt;&#x10; &#x5;D: X   -!q   +5&lt;zD # !j &#x1b; ) ζ &#x0; \` hZ  As  &#x7; 3    : ;&#x13;  k{k &#x3;&amp;wJe=&#x1c;*&amp; wu p}  &#x1b;Z&#x14;l y&lt;      &#x16;B:&#xd;
  \- [ )  &#x1d; @&#x3; Q* 2&apos;-t &#x10; &#x1d; , q Q&#x14;ʕz    0 W &#xb;   &#x5; o  t&#x4;&#xd;
펲5 &apos;  &#xb;RU G J  %   r e  lNw&#x1d;:\, X J  Rd ĳz &#x4;юÖ&#x1;ND   &#x12;f&#x5;,t)j3d Y&#x6; f = q    Q U l &#x11;L N &gt;&#x1b;g τxœ~nO          mo   e&#x1b; ) 2 ~   &#x2;J&#x5;&#x1b;&gt;KW&#x16; tb &#x14;  }b ҈&apos;* y  F  &#x1b;   6  ,|    &#x13;&#xd;    .&lt;   Ɓ   g6 1 &#x17;&#x5;&#x15; y &#x18;&#x4; 5 &#x15;E)`_耣 &#x3;&#xe;   5&#x17;;   r 5  ]  &#x12; L=p  =S&#x17;#   Y \c%R z  k=p&#x2; &#x13;I&#xb;&#x1c;B&#x14;-e  ̘&#x1b;  &#xd; &#x15;  J do `4 l YҬT   7X  Hn,7 Ad-7     v o k~c\ &#x1b;    &#x10;z  &#xd; |  V D &#x1b;&#x15;  6   n bJ&#x1f;&#x14;L ՞ M UT2i lҴ 4J Ec2WV    n4jc [&#xc;~ [V  r  ά    &#x17;iC    *y*&#x1f;Ӈ&amp;P E&#x5;7  k  ] Y&#xf; &amp; y &#x11;7 q&#x1d;i &#xc;I=i&#x2;nJC  &#x1; &#x1;u  5    &#x18; &#x17;S &apos; @&#x1d;R&#x7f;&#x18;&#x1c; : R[&#x1a; TH}iT&#x18;Jc&#x1a; 0ƊZ   r i&#x2;Oz hC=k  /   7 G &#xd;
 N&#x13;       B SiֈJ R &#x1a;  @  &#xc;  - C xү&#x6;} Ұ &#xd;
 q &#x1a;&#xc; v=k #״&amp; -  S  &#x1c;ܵƣ ܷ&#x6;&#x19;  Q$ =  &#xd; EZ    &#x1e;6 6Dz X: D&#xd;  &#xb;  ! &#x1a;  !   N   	8&#x1a; &#x1b;m8&#x6;   &#x0; &#x4;2x )&#x1e;&#x8;  &#x2;&#x13; u&#x5;F&gt; 鍵   u  z&#x13;   ; fw &quot;+&#x13;&quot;ehD&#x1d;  4U&#x16; HW 1&#x1a;  !  CD@ }&#x13;[  &#x6;P 8:. &#x12;&#x0;,  &#x1a; ($&#x16; &#x1; {&#xf;!  &#x1b;  7 b    #   (x&#x15;Y (1&#x11;Y\^&#x5;   *2q&#x1c;   m q [9 V% 2&#xd; % &#x3; | &#x13;&#x4;&#x2;M u y+&#x1d;r a &#x1a;E &#xc; (&#x7;  &#xf;&#xe;  yS &#x16;   &#x8;&#x4; *&#x7;   &#x4;ȊT&#xc; Ւh &#x7; &amp;G&#x19; &#x12;&quot;&#x1f; &#x12; &#xf;&lt;&lt; N9J !Wx  I r&#x14;U  f9t Q ! A r&#x8;v / z6! E &#x1d;%z !   P &#x1c;&lt;KT}*  9 4   &#x1b; &#x10;?&#xf;] : ^&#x5ee;P 7á  {   P3 ȅ&#x1d;Z&#x11;  =&#xe; ! &#x5;jGJ~Ո ̺&#x2;-U `&#x3; U&#x18;e%   o @ &#x1d;  :*6  iT 5 9 : О&#x0; {rR`an  U   t4 ܢ V3    &#x2; &#xf;yFb B&#x1b;&#x7;&#xc;D &#x13;d} &#x8;  7&#xe;  &#xb;  &#x1;R K     &#x1;   &#x4;KC&#x1b; &#x18;	 рI &#x1a; z}l   $   ƚ &#x14;#     &#x1e;5tn G&#xd;  ܤ    Ikܚ x   O?   4= ] W6dm   = ^Y,- ^ @ b i rա I)V   h +  i~   N , &#x11; &#x1a;&#x5; &#x3; B-&amp; + n	 (&#x14;(  % _ z ~ &#x19;=  |   &#x1b;  &#xd;ͪ ė  &#x19;zA /PI&#x380;+T ^&#x7f;s[   - &#x19;  *&#x12;  _d w  T|2&#xe; k  IE ⵐ    Sk&quot;Ƒ ^r6 /-  3z ~E &#xe;  ~ yn&#x1;# ~2er+a&#xc;  N  7N g    &gt; u  [&#x1f; : &#x12;Y 1)g    yxj &#x2;#1.f# E &#x10;  L+ e&quot;j b %N_ 3  &#x11;  rK   =&#x5;Dj  FE  L Y&#xb;  E  UT  &#x3a2;&#x5;   &#x14;    Xe&#x1e; F (1   ux~] Z   f̪ dI^, D N&#x2; &amp;&#x15;&#x3; ZRQU   Ġ  [q3W  &#x2;.]bE$ &#x3;98^&#x1f; o &#x1d;e]F ]iLj-J &#x14;&#x6; KA &#x1b; }6+`    |t &#x7f;Aⷛ  &lt;&#x18; &#x1;&#x8;  c J1d Fhx # kw  &gt; o/&#x18; V&#x17;  &#x7;  &#x15;!k  ;+ W&#x11; &#x1e;&#x15; Ux Gǝ&#x1b;  $&#xf;#   7qs^   lU&#x11;   u    &#x13; &#x1d;${m   kb &#x15; &#x14;kI_l6Cq } .&#x1a;&apos;fOjV 2 PJm2!&#x11;&#x5; N }  6 6 p n m&#x1b;s (&#x19;  qX .   B U ϙž Vj&#x1b;r8 &#xd; (&#x6; kk /  #  q Iȋ # X{ =\Ƶ &#x11; 59_&#xc;    w &#x1d; &lt;   d% ;&#x14;&apos;1 ,&#x16;&quot;&#xebf;  P \쪕 _ u 2Qf ⭐ 9af  7           ]P&amp;&#x14;_  &#x1b; q&#x14;o sn	y |i  {` Q`м  q 4  x &#x7;: = J  ı  &#x10;{&amp;  &#x13;&#xe;!  *U  &#xb; ) ]Py&#x8; &#x8;E&#x85;tf *   ʽȚ       &#x13; qk_   &#x11;  A V   * l`7k   &lt;rU  &apos; c  %&#x5;  &#x7f;I o  ?  g M&#x10;l :[ M &#xd;
 O&lt;b&#xc; \&#x3;+vA  | R% &#x15;%֮WH o s kQ3   Χ ) e M   &#x4;j3  2&#x1d;   M)(Gj6 &#x1a; ,  a 9 - Y &apos;w&gt;U     &#xe;&quot;&#x1e;&#x1;X #   . v &#x2;w%\l v &#x4;    D;&#x10;Q g&quot; ҺU&amp;  ,   ΞlfT&#x1;yA i a͋ |45&#x0; @ H &#x16; &#x4;s&#x18; &#x1c;ԧ&#x15;&#x17; &#x1e;&#x4;\f    OI j&quot;&#x11; = &#x1c;J{B9 `&quot;&#xd;I 2 &#x8; j&#x4;L4L X  XdͶ&#x4; Y&#x5; u  .v  &#x1f;\&amp; C a ) +Δ?} ^&#x8;  H   &#x15;Z&#x1f; &amp;&#x12;)ܓ&#x18;. W nM*N &#x1;lV:&#xc;   J &#x14; I1f&quot; &#x1d;I ԳֲK&#x17; I&#x1;&#x17; 0P&#xc;&#x6;zo- `&lt;R lԼ&#x3;  xi  &#x1c;  &#x6; @&#x2;Β &#x1a;  jT ; 6N@vu&#x11; &#x19;ؐ#&#xe;  &quot;  &#x6;  uO   &#xd;
  s &#x1c;&#x17; T\  &#x11;&#x1d;  [ ?wA&#x16; i   R\  9 P  eMz&#xc; &#x16; + # 	 VJ *r RP&#xc;E&#x10;&quot;c  ՚BE d =&quot;Gֈ Aы裦&#x8;&#x7;j%L) &#x1;c &quot; &#x17;8j     ` rܔb&#x16; &apos;jKG   dQa/j  ˗5 &#x6;Ţh  : $     K*&#x17;y %   ։/ $J+1=  /    Y  9&#xc;D0&#x12; I&#x4;# Q ʡ &#x12;zi%  :&#x7; 싕&quot;a &#x5; &#x8;= &quot;p &#x1e;  80 &#x1d;BIIsYx Ī &#xc; -&#x18;  }     &quot;B &gt;3҆A= pa &quot;߸Pd#&quot;&#x13; 8  .   &#x12; ȇY  &#x4;r   { &#x15;&gt;G Z      $  $g&apos; O &amp;-&#x1d;  &#x17;  .  ޛN&#x2;  7  &#xd;  &#x13; &#x1e;&#x16; d @ }  Ґ R Bi  .  @ &gt;i9Ɋ3 # &quot;     ! =Ba%rV%z  75&#x13;hq &#x16; sb&#xe; ,lj&#x11;2UA &#x8; &#xd;   +&#x11; UQ _&#x7;e     9 A{   y&#x12;L# iT )*&#x0;50 @  0 GY  m0&#x15;&#xd;k ! ٦     c  2 l   &gt;&#x15;  &#x7;0  &#x15;  B&#x1b;V   &#xb;w;l%d p x y ^!`&lt;ʰ # N 5l x a+ E&#x18; j = B   &#xb;O  9ȇ 6 =&#xe;0  [-Gc G w 9&#x13;Ԟ }vNE{     . =  Q   &#x0;pc+t 2 T s }ѻj I &#xd;
  wg ǥ  &#x1d; CF ~    yu &#x5;!   [  &#xc;   eM  N W  展       &#x6;y&#x4;   y}q  	V!]N, 4&#xb;&#x15; fy6 *y&#x5;&#xb;9Gb;&#x12; &quot;      *F i  a u v}ih&#x17;  m= &#x1d;N9 as   I&#x1f; *  B 8&#x1; n W    Sv  ; s:  &#x15; 8⿉* \ 0 &#x1b;  q~*2 ;    77  &#x1d; m  &#x1e;u     &#x3;    h&#x1e; er coC   ` B,[  B^_p erjI&#x1b; Y &#xc;  &#x17; E    |rF{ M z&#x1e;_6}S   &quot;  ~   1 &#xb;A ~ &gt;5 &#x1d;  &#x1d;   &#x0; VNQ&#x13;r K!KTU V* &amp;&#x17;W e &#xb;QR O 9 큿 NB! ] ! &#x1f;# &#x8;  vI5  &lt;* )   U     &#x11;&#x5;Y&#xc;  g S   d    TT &#xc;/ &#x3;_.&#x6;  GE&#x1f;~  &#x16;&#x12; m		  z }AB&amp;#/ &#xd;
 Ӹ.1  l̖&#xf;g&#x16;  4xL ث  xLpTў  wp6 &#x1c;`q  &#x1b;&#x15;&#x11; Iy 6ڕh h *   \x &#xd;
&#x17;|^ 8 M #    &apos;e  x#   - &#x12;2Zm4#h   s  &lt;N)q  b &#xb;  U&#x16;   OI\  u꿾    K&quot;b@ G% &#x1b;  &#xc; a    ̌u&#x1d;&#x18; vGQ 3 % h3U  &quot;Wl &#x10;LHP &#x12;I, 	 &#x12;K  t D &#x11;&apos;&#x17;e     걤     K z( ꁤ &#x13;Vh  ei       dkaZ  NY ¾8S   1ϝ&#x13;Օr   e +   &#xd;
  Y^z!&#x1d; 5 Э ]N&#x13;cT(y  &#x14;&gt;c\ L BI{ !*ӌ D9 J N  æ   &#x12;&#x7;5g8 )% ;*&#x16; 6   K7ku  &#x12; (   [kq&gt;&apos; ݔ Dl k/V &#xd;
94 P V GM  &#x14;%%   &gt;r5&#x5;3 幉      7 &#x1d; J&#x7; j  % G &#x12;&#x7;  8e&#x15; _ (&#xc;0&#x11; ¦   &#x13;ɦ B. &lt;z c &#x14;y Q &#xb; QK &amp;  P {L  st) d  &#x0; rޕ  &#x5;Jz #&apos;I  ϓ &#x1;; dS dJ  H\ FG    @  &#x14;/ Q    lw % Sd&#x8; {Y  q   L  d  &lt;w #s ;  9ϝ \c)9#9 q   \ {     &#x4;w&#x12; @  3&#x6;&#xd;
 $ +&#x1f;H   Q&#x10;f &#x530; &#x11;&#x1b; &#xd;
  Y ;9  8&#xd;
*0 		 @  :a  g&#x7;j 9 &#xd;f &#x14;  !GC  HЃ  7&#x2;yL&gt;&#x1a; ^&#xe;  1P^6oM,t : 0N  ٭$ c &#x4; e&#xf; ^I1  = |  |9  $b  t 祯{ &#xd; г-}]{ O% h  &#x12; L &#x1;   $ _\U eN %   t H &#x7; &#xd;
\  X@&#x1d;  C&#xe;C,&#x1e;A &#x11;) fu&#x1c;  !&#x11; K Z(Q  A&#x1a;=   {  ^Gx &#x14; &#x16;q O ,t   ]W 2#[&#x12;uj    R nr &#x19;&#x16; (u&#x1d; I  t&#x1a;}.aC  d &#x1b; \W   &#x12; &#x1c;  w   4&#x12;&#x1f;g  &#x7f;f 뒝Nӣ  9g  h *-  (  ޚ  qG\cZIH K &#x3; &#x0; z\   &#x1;&#x18; @  &#xb;&#x3;	+ r  G &#x58c;  &#xb;{&#x8;&quot; w ĺ&#x10;/ǳ&apos;S枳 &lt; {  }  D&#xd;
&#x1e;y /&#x2;  K $&#x12;&amp; u &#xb;  En  F  &#x5; l	 &#x8;|&#x1d;	M&#x6;q2\O &#x7f;R&quot; &#x1;  &#x1e; &#x18;WH X3&#x17;&#x12; &#xd;
&#xc;6 h&#x1b;  ~(f&quot; 2   b  \   &#x1f; R&#x17;  )   ,&#x10;I2?  &#x18;CA 3  O m(  &#x8;  `  ! &#x1f; &#x16;[Bĭi A &#x7;|v&#x0;&#x7;E S&#xd;
a &#x12;? [@ 燞   |#q. } a     ok  M m  $  SCYr Ͷ)&gt;! &#x1f; &#x2; ~~ D  }ёl &#x5ca;lML  ! ޙ&#x19;    &#xd;
      )O՚ X Q ! ]&#x7; s  } { m_\a. %  4߾  RG9Rc   Ƿ  &#x91; w   C m  &#x1b;z&quot;&#x17;  l +6^ ^Y  ܾhr 0  H  :  $p eqqEŤDt  *&#x18;G &#x5;v 9  j|_  &#x5;#,  UCx e  &#x5;Y$ (&#x1f; w &#x5;     n տ |Y &#x1c;R SCU ӷ &#x1c;*X &#x15; RWg ~  =  ?m^5 &#x17;  &#x1d; qW&#x10; &#x1a;&apos;s	 f  &#x6;lT&#x8;  &#xf;k 6ONZ   րٯ 2K  ֥ 6   m_] *  &#x1e;  &#x1d;T  &#x2; &#x1;  &#x7f;h^  &gt;4? C W ΄  m &#xd; Z j&#x3; h&#x4;     &#x3;)  Y&#x19; _3 -  V&#x1b; &#x1c;&#x1b;0 ): -  * &#x0;   Y  &#x1a; 5Q&#xc;e    &#x1d;y &#x0;  I   n  7r&#x18; &#x18; &#x4; z  7   &#xb;&#xf;&#x1e; &#x18; &#x5;J {r    MyhR   ϝ  &#x3;U@ V  &#xd;
H ț  &#x18;-&quot; k VG ˘̡&#x1d;0 &#x11;  :r!  	  a &amp; \E &#x12;&#x7;  &apos;&#x1e;  &#x17; CO4  KB 䡨,/  &#x12;S̼ df @&#xd;
 1 3y0&#x5;?&quot;  X  bj3˾ 2Eb &#xf; wj  7    &#x0; Xg.X}T(&#x18;  uq   # 2  Ct` Th !O\g #  &#x19;r M   v&#xd; c   ]3 u1Y q&#x1;k$ sυ &#xb;L H t	E .$]P·N~  &#x1a;q&amp;k &#x5;&#x4;) b $	 &#x6; y      P &#x12;  ee &quot;v %^d]v /°  l        .b   V&#x1d; :     Q }p ;8 /98 }`^   s  3&#x13;{ NL 8 &#xe;K [&#x3;&#x1d;m} n u      ++ {&#x1e;s &#xd;
 \  &#x1f;    e    ,       m OZ]&#x10;  ggo &apos;&#x15;&#x16; ZSV&#x8; + d    &quot; (   &#xd;  GQN R ȗ*  Fb  b &#x8;  -    Qq (Z c  V Z   F &#x1b;# /&#x1;a&#x5;c&#x4;    Y  c  T %(  Ru &#xe; 9 ) Z  ) 4/NZg&#x0;    z fM C WQ 1k J     &quot;  Y  ک  ONZ ӧ    &#x1d;Z&#x7f; !Ȓq)q8&#x5;   &#x5;   &#x18; - ,B &#xd;
&#x1a;&#x13; &#x7f; &#x12; &#x1c;ʌVH&#x1c; u=#%\&quot;    (   - D&#x7f;      o   t W&#x1f; )E~?T&#xd;
 }i&#x5fd;0..   &#x11;&#x13;    &#x1c;  1S z 9 t[ w$ ⼅3i *=ު ܶ  ZF\ :&#x12;ْ&#x5;43&#xc;.A&#x16;x  ַj   EM&#x1e;ID + !|( Ċ  b  ˦Xby% ,  u ?m  &amp;   ,?(   $BFJu lMb 2 X  *A}&#xe; U  E&#x1c;&#xd;
` l   m &amp;ܹ  pD&#x8;zU&#xe; &#x1a;c Z; MXs yz.39&#x16; ן m =AD &lt; ⸑&#x1f; d `  &gt;   _&gt;i&#x2;j &#x4; &#xf;   { + 9zUe z I ߂ A  ȡ&#x19;&#x17;&#x18;   &#x8; &lt;o]} V  kPS k  [ WL &#x15;   I*   8  U  &#x13;ʎDq  UZ Qz L/r&#x19;T&#x1c;D炔UV&#x1c;D s+    8&quot;&#xe;# 9 3&#x10;B@  D&#x8; N&#x0; ;H;&#x6;$!    h $&#x1f;z&#x12; &#x19; A &#x8; &#xb;Rܞ&#xe;&#x1b;m 8 &#xd;  &#x10;6   *pA   (L&#x12;&#x1e;j Y&#x11;G&gt; P&#xb;&#x19;j @-  &#x17;O  B &#x1b;}Ob 	p &#x0; &#xd;
 b&#x1; &#x16;  &#x1c;p (O &#x5; H6   ڎ    &#x12;v&#x14;&#xb; NV  T63rZ AaB m&#x14;&#x3;    hxz &#xc; { N  &#x1c;5o  . ښ&#x17;-p 1$ C bUiI &#xb; U&amp;/   {{&#x6;  Y &#x1a;m?:  &#x11;&#x15;S    \&#x15;Soz0c&#x1e;ͷ &#x6; / Y L  %9є ٿn@bÀ%&apos;͓&#xf; &apos;&#x16; W&amp;   &lt;G&#x12; &#xf;K6  &#x14; W \ jsl&#x15;&#x16;&#x19;T&#x10;  &#x1c;\   )&#x8;$g =  q  |h &#x1c;   g&apos;gM Uߵa   Y&#x15; f ؑ Q&#x1f;}&#x3; c &#x1e;} V E   ; ,T 嵊Y    &#x1c; &#x16;2  q &lt;    ڢ  |G&gt; ʩ ~v	 &#xd;H&#x1b;&#x5;&#x3; ?&#x1f;  oWq)]  : &amp;f  &#x5; ]&#x2;	j    NVW&gt;&#x10; &#x1;&#x1b;&#x2;z    m - &#x16; FoL2 jlAf0  &#x7f; &#x11;     o$ &#x12; .v9%   Թ     u[&apos;XC&#xe;Vq &lt;;     XW  &#xe;G  J     ΰs}y&#xd;
&#x2;j&#x1f;&#x3; h   }V  q 3    &#x3;*q| ] 8:	   B)+ ͣ     E Pn &#x3; cO   &#x0; &#x2;q &#x18;&#x16; J, ^e&#x8;xɡ   &#xc; ӓ U͋  &#x13;Rkv  JG b&quot;,Yz  &lt;z  W&apos;&#x1f; &#x2;  Y %7&#x7;   2&#x1c;N,F Xb1Y&quot;  Id C   q&#xd;   S j&#x13; 7 &#x14; H E  UH&#x8; \U&#x8;1\d2hy y ا 6 7  lWf h    &#x1b;D&#x12; #&#x15;Ü  d a &#x17;  o  t I p &amp;  ߷/( &#x13;W &apos;&#xe;  }5`u	   V     yk d GM x mvs  R T  J: 4 : g} 1    |&#xe; T      T 7$ RJ&#x1a;Y \*ⲉ !o, &#xe;  O  9G ; 6p)&#x4;   &#x7;    j K  Rq:pN&#x1d; ;\&#x15;&#x1;# #.:  - @j  MI JR  K&#x7; ŗ    + ْ5,ؗ`&#x1a;c   bUL Z &quot;  &#x1c; H `x C I  &#x5; @  EZ /&gt;g&#x10;i  F&#x6;B&#x1d;J&#x6;  &#x12;٤&amp;* &#x5;l([ 6&quot; .&#x17;  {My(&#x1e;&apos;  . ;  `J d&#xd;
&#x1a;  /9 q ,&amp;V &#xf;  P&#x2;!&#xf;Ś&#x7;  J    zx t g  I  VM = S  P 6C&#x17;#1&#x1b;[W&#x3;   &#x18;&#xb; &apos;5 9ϑ } -) &#x1c;&#x7f; Df_&#x12;ɍ&#x15;͜ nd ƪ &#x4;m ` )  r 4&#x6; / F]&quot;(UxŌݘ&#x1;  M h(&#x10;&apos;E  t} 8 &#x3;R w%0&#xf;&#x1d; =&#x1;z @Wk &apos;&#x1c;]&#x12;W&#x1f;  &#x15; ,   ų &#x1f; e1  - Q;&#x1e; k*&#x1d; [    P   L&#xc;5&amp;,   ^_Vp &apos;G    ]1   f uڃ     AQ|      vТ  G  S  l  R[ &apos;  &#xd;
%  Z c(  &#x1b; 鵸6  &#x0;e# ~   &#x18; JQ@  &#xf;  `; S  u+&#x1c;jq   W  [U0&#x2; uG)W H ( w   &#xe;P V &#xb; !F&#xe;a28&#x1e;&#x17; ?&#x7;+{ 7 (&#x11;&#x15;o   M s&#xd; K&apos;  i&#xb;g : &#x3;    zw} _    t  &gt;;k^~l     l  r  V N &#x1f;#g0 h |&#x8; &#x1d; 5[Ϊ	  &#xb;-\  &gt; s &#x18;  \B|&#x17;b 5Y 	I SB K &#xb;+&#x16;xʍv5  w %  w  ț  z &apos;c      N_  &#x1c;H^&#xb;&#x15; m!&#x19;u&#x7; Q~䂨    &#x4;(  )   i ] rЗ@ -  [ n   Cb #7&#x1c;&#x0;   &#x1e;3p /A&#x1a;j~ f  &#x1f;i   v&#x15;9  H  S s 퓯    &#x1f; Ӭ W &#x1c;H  i]&#xe;p܊R )T )  ۳&#x2;e 5  &#x18; I   i  &#x2; k  $v  D   &#x58c;  ]ÿj&#xb; y   Z+  ֤я h&#x19; F &#x15; T  ./ $ZK B  &quot;ty-   6&#x6;  ɦ aw  Q % ;t&#x1d;/ 䪓  &#x7;&lt;,  J_&#x7f;   &#x1d;d  \KI 8&#x1e;W&gt;H 2# B &#x1a; (&#x15; &#x10; f ur&#xd;
{yr    %  ԥ= QY&#x1c;^K b&#x16; cq      &#xf;ϊ Rޚ i[hU( &#x1e;T&#x1e;s M  kR U&#xf; TT A l &#xd;
 r&apos; 6  &#x8;W R   l| ?   7 Zv    &#x4; a map&#xc;  G  E r ]  5  v   fB j ȕ `U o 5 t ~ &#x1b;&#x19; ^ m% &quot;,G uNz   ˳ʕ&#x58c;n &#x7bd;h&#xb; &#x8; 3 &apos; % &#x2; &#xe;p n   WբY&#x18; `Yn&#x16;&#xe;&#xb;&gt;M&#x1c;   =o^  z &#x1c;&#x1e;  aq  ]  ~  &#xd;
U c&amp;\3 ?b 뢻&#x4; Q  f&#x15;  Ȋ֑*&#xb;A[ &#x14;&#x19;   Nѧ&#x14; bİ  t$&#x16; |   &#xb;Lt&#x17;o ^ Q _߶  h&#xd;.nDPe2&#x1f;(&#x0;&#x6; H y&#x38d; =  &quot; h&#x1c;  VU=  V )  	 [ l̇  B c ,1  ɇf &quot;g&#x0;    G 1&apos; ٻ&#x2;&#x19;   &#xc;r T G   WP&#x16;&#x1; m C  v 2 j&#x2;&#xc;   &#x1c;`  ͊   ʓ Tơ۹jqp &gt;  [&#xd; &#x1a;   9 G_q B͊V&#x17; :&apos;&#x1f;I&#x1b; .  &#xc;鱐 |  |y 9o_  !     n U&#x19; &#x1e;)&#x1e;l&#x1c;   z   Q  //qܗ_    Z   Y &#x16;I&#x1; /=VAu  t   )  &#x16;9&#x16;9  B&#xd;x  Uavt#  6/? Oz ^ }    &#x11;&#x12; : F   V&#x13; X  14  ǫ  A &#x2;   &#x7f; 睷 &#xd;
ɲnX ~ &quot; A   #aEb&#xd;@&#xb;&quot; Nܻn  &#x1b;&#x5; 7 ڬIIi.)Ϧ$=A 쵬ҧ ח NE  6 e&#x18;&#x17; 4  q =k&#x13; &#x13;&#x14; b Ta ، &#xb;Up B&#x15;А x  &#x16;D &#xf;  )9&#xb;  &#x16;  *a  6 ¬ T JoT  Ԭ&#xc; ,&#x3;;Ϊ ꣬/ &#x4;  ?R K ބ &#x3; |H9&#x10;[ :&#x4;F@ o 8 &#x1b;  y&#x7f;T u &#xb;  H , &#x7b2;   瀃 &#x1b; 8 ]?M  &#x18;2  ,px+ %&apos;V &#xc;&#x12;IO%&#x19; a֥  &#x0;  |&#x10; 7B 4 v |  ]8ҧ   =  TP&#xc;y L  %|O &#x12; ́&#x7;TiY ϊ-  &lt;rٹ  tѲy=   I 5    d &#x7f;    &#x1d; &#x379;?|  m    &apos;r q  ɸ o Ȝ &#x5;W&#x1c;&#x0;  ̯  &#x1d;&#x1b;&#xe;O: o;{z vD&#x12;k&amp;+R7X i n &#x1d;h (mw  } &#x1a; ]   r d at ѳ&#x12;    &#x16;H  dX    E&#x18;U &#x1; &#x5; &#x11;!v  &#x2;\   IU  [&#x10; O &#x6;uYr &quot;%^P&gt; TyD7&#x10;ڙ   ͮ   Gc  U  S7` q   y &#x3; ! Ϫ&#x1e;e &apos;͋ߛ   v ɗ   d/ S	&#xa6f8;   &#x15; ڒ {  Ў &#xd;
 M W   b?  ( Ʈ  \Za&#x1a; &#x13; &#x2; &#xd;&#x13;  M &#xb; &#x16;  pT&#xd;
  &apos;u   ~&#xe; 5ٴ&gt;N  $&#x1b;  o rߍ  &#x14; y \hz      &#x3;  u_ = &#x1f; b] b  H;c&#xb; b rb z# |x  K }   d   U   ߮}  Aj 5 G T9&#xe;&#x5; &apos;R &#x5; =W&#x11;  ܲk  5 {  ư{&#xe;&#x12;xQ &#x18;  p&#x15;&#x5;&#x19;fmg D TC&quot;7&#xb;9z  ?{  k bH &#x1b;d 1    m n] &#x5; 낗 &#x14; &lt; &quot;ĮŞs wN g&#x14;&#x14; _Loݠ\?7 &#x12;  *    &#x7;   o? ? {  }|} z~   K  ,Y1    + &#xd;
?   &#x16; C &apos;   &#x1c;`m   &#x15;h $ n+ U&#x5eb;   lV{Ό ? W p   t ܌  Ŵ &amp; i h^&apos;&#x1a;Gz bj    M&#x11;~ &#x1a;&#xe; ֫8 L &lt;&gt;Mq̽ &#x6; .   :!k#_    t    ~p&#x16;&#xb; &#x10; 5e 뗱C &#x4;   8  &#x1c; _Jf  `&lt;]  * F Uw# k  0)=  躄7&#x16;  |  1&#x5cd; &#x1b;0) !q&#xb;&#x1b;M  &#x1c;E  K  )[ Q &quot;  #   nӹ!  &#x7f;  eՂkE  )،   &#x18;&#x1; {iÓ5&#xd;Y &#x6; 4&#x1d; ; ){ 7G5, Y#4 m  W&#x18;     7(    $  ( &#x1a;߆  ۓi&#x7f; at&#x19; 7Ǳ LY ) ,U[)PD&#x1a; a   x &#x1c;&#x3;&gt;    d 6    `  &apos;Q&#x8; : &#x1;o&#xb; 4 &#x19;: \`  ,   t&#x4;    n 6n&#x1a;   ||  &#x1f;&#x5;$밤&#x16;D  ,\      &#x1e; &#x4;[ \Q    D C 8܁ &#x1;   l&apos;   &#x1c; Wm m![  i p i  d  6 WL  В2)   C 9N&#x8;e 9&#x19;   +   E  )  (  &#x6; 1 ɲ?  &#x1f;   &#xd;  v    M H 6  9L n &#x2;    v [P i  v.    &#x1d;     &#x7f;   .   G5   c&#x18; (L  !C   &#x6;  &lt;&#x1d;M  _&#x1c;  + h&#x1d;  ʡ &#x15;3 	xn&#x2;  &#x11;Z&#xc; i:Y O  gL&#x2;&#x8; T  I|Ko`&#xb;f  Yp 3 [   rz&#xb; ?&#xb;&#x10; &#xd;
   &quot;&#x19;&#xe;  Ec &amp;  }c .A &#x19;M&apos;ل    ~:z  1| I{9 b Wqmr7   &#xb;   &#x19;;^   H #  0 MV ecy &gt;&lt; &#x4;XU?&#x5;-a Z| :+` &quot;   zE u( &#x12; ]  2&#x14; / &#xb; e *  !   $&gt;6  &#x7f;  u 3ʵ  &#x1c; /C  -s =&apos; &lt;ɪ   =f &#x2;  z;  &#x8; s ~ 9 _ &#x6;&#x3;  M-8    f p   15;  vJ B&#xc;&#x12;  &#x7f;2,`&#x1a; z     U ߾x  g      b  &#x19; * %&#x15;KE  #p&#xc; ņ&#x4;  p&#x10;      L  u 9 L  l &#x18;-  &#x1f;{ ȪV  p&#x12;_ &#xf;  &lt;      `     rc  !.  &#x2; &#x4; Xg&gt; &#x1b;U R_&#x1;tO&#x18; &gt;b b&lt;   &#xe;  ~ y    ] d: 0  S.  zɌ &#x0;F&#x15;   / F B d Aw&#x17;d4R&#xb;6 Q , &#x6;&#x11; _  Tl&#xd; Gt. &#x1f; , ? &#x16;&#xb;   x  h   x&#x17;&#x14;r { &#xc;   &#x19;  G&#x19;M   tx  a k U&#x8; &#x1e;L _F    (:&#x6; &#x1c;&#x18;&#x13;   j H _c  &#xd;
 :z  *&#x4; + &#x10;&#x1b;   M:\       &#x5;  mgS j&#x7;  2y Ř| &#x5;3 W &#x19;0&#x7f;  ؄   4     i   r   41 M4f ȟ =ҧ  &#x15;  VR&amp;   W   &#x9e; JY?  &#xf; d   _     k&#xc;&#x1b;V 0~ &#x15;R h &#x18; 2+ё6&#x6;{`   t5 &gt;   d:  h4&amp; t  &lt; l &#x19;h  } &#xd;
&#x7;@ ʲ*O  &#x7f;&#x1d;*   Q !C O  I&#x5; 2^4P &#x1e;}}&#x15; Rآ 8&#x19;   T &#x18;j  | _&#x19; M&#x14;z  ^  &quot; { LG e l  &#xd;
 JL ^&#x19;  қd6[ 4_[   D Y  Б$     &#xe;P     Ƌ  x *k- 8  &#xd;
8@&#x14;D&#x1b;&#x1c;  &#xd;毺  j!   &#x2;  &#x16;y  ) [X« i?,  WS&#xd; &#x81; 5 aT  ^E9  &#x2;e % a   :ڡ)&#x0;  C  ﯩ&#x1e; E&#x5;  뇅={m  &#x18;= *&#x1a; _izy&#x1d;&#xd;1T PG&#xc; &#x1c; &#x17;*    Q&#x13;_YO,   CQ      ⾊ h   ^EW  R\&#x7f;&#x1d;mQ    z ba WV&#x18;   W &#x18; -&#xd;
&#x1e;  4&#x16;	 / &#x1a; g   F]  W &#x1c;&#xb;  &#x5eb; &#x5;y䗨 &#x7f;gݱ&#x18;s 	: i&#x1f;y &#x0;          &quot; 7  J P Uǝ&#x16;   &#xc;2  w4m  Eg  b  -&#x14;bU &#x13;&#x7;  V &#x11; &#x0; _^ W  [3 &#xd; ښ&#xc; }&lt;&#x10;S  1 һ       p  ,    N M &apos;  `vK J/ &#x3;s  &#x1c;h em   *z Ԯ 6    qyC  l  m &#x1; 7T@&#x19; R (&#x13;+OV  n &#xd;M#s !S&#x1e;H + cj  1 |&#x1c;     h`*G&#x1; M&#x2;  E  nP &#x16;5Y &amp;  4&#x2; ` e G S:&#xb;    &#x1;Uգ &#x4;&#x5;s  &#xc; &#x19;J ) V   ݞ D :F  &#x13;msz&#x12;? =( v r E&#x5;   &quot;] W&#x1b; Y   ͝&#xb; ݹG &#x12;]AK ]    I  &lt;&#x12; : [X&#x1a;   &#x3;s a&gt;L&apos;_G   &#x1;U  =}&#xf;  ~&#x1d;-(j  &#x0;  ӟ   &#x7f;  c B    l &#xd;   &#x6; C zz&#x18;Y nL&#x2;b `  ꡇ [ Z  &#x19;xf `   !  t vno&#x17;)&#x6; v&gt;     h&lt;l&#xf;a&#x16;   3 U  L&#x0;   8A   &#xe;խ&#xd;
ӆ&#xd;
¸aM&#x10;4&#x12;eo&#x1b;z&#x10;ۡ&#x17; 4&#x1e;&#xc;  M - $ &#xd;
^ o} a a H I&#x1b;6  M M &#x14;&#x7;rs &#x15;_  &#xd;n` &#x4;&#x16;Ӱ:Ѝ$I&#x7;&#xd;     h  ~     &#xc;    &#x11; ۠a (l đn&#xc;  &#x1d;     &#x1d;  { Ȑ i gs&#xc;&#xc;N{&#x15;?b /  [&amp;  i &#x2;9   E&#xd; \      &#x1f;{    &#x18; 4 &#x1e;  &#xb;g  ny&#xf; &#x13;&#x15;  ;    x &#x1e;q  ?Y &#x18;l &amp;:V &#x18;D b 3&lt;S  7  ;VG A &#x15;&#xf;yGY     ? &apos; Jy &#x1b;_0G[&quot; &#xb;O 5  	&#x1d;  f 8| &#x1e;e   &#x1e;1G &#x17;    h8   =$C&#x19; } % T E  I   Fp&#x2;&quot;e&#x1a;7  mx7 N   &#x17;Z&lt;l  δ&#x6; &#x17;^  &lt;&#x1e;&#xd;   п  &#x8;N m &#x18;h/i &#x0;P=     &#x4; s&#x1a; &amp; ?&#xf;  /^$&#xf; 9 x  7   &#x4;a    Q &#x8;,ܿ)&#x1f;  &#xb;   ş bX0Q&#x1d;  c  L S@  s&#x6;&#x0; &#x1a; &#x16; q    g  &#x12; h  3ط ͈  &#xf;l a &#x15;  j6&#x4;  7 &amp; 1 68|   R &#x0; Y   @&#xc; -磛   d5&#x1e;&#x1f;  f&#x3; O nų   [&apos;@t&apos; x m&#x4;&apos;  &#x7f; wt   &#x3;C &#x10;&#xf;  t   -F  h&#x8;۹\%   ; S j&#x15;   &#xd;f+|~  4&#x2;&#x0;~[ ΧX  6&#x19;/R4 &#x12;w  s&#x1c; &#x16;  &gt;  F  &#xd;Te&#xc;   ҟ   &#x1f;&#x7;&apos;  ?_      P V        &#x1c;&#x0; z ? &#x15;^ M&#x1e;F &#x1f;$+=  c M&#x18;Q Lg3 ^ V  &amp;w Ƿ 9  c  &#x1d;0) &#x1; &gt; &#xf;  &#xd;
_H / 	  &#x1;,      &#xf;&#x18;&#xc;.z Vv  + &#xd;
 - W ky   &#x1f;م   &#x1d;&quot;  MG  2&#x19; ?  R X˟X   m &#x1c; 3   K@  -&#x1; lC ⪌ &#x1e;  x:H&#x10;   6 {Da _G  2&#x19;|9O &#x3;  + &#x1c;M  7 0qʋ  &#xd;  &#x1; M  ]t	F&#x1e;, ~  ޣI &#xe;&#x4;ٟC  ݻ \&#x1c;tΣ˓K +   l  , :y    &#x11; m E&#xe;{  ß&#x19;Wz /&#x16;p %&gt;&#x8;_     ;է-.c    &#x1c;    &#x13; B &#x5;`    |&#x19;!   &amp; 10  , &#x0;  a:lO  u d&lt;Z  &#x1e; J w  &#x1d;&#x8;pi  +&#x1a;: a2&#x3;&#x83; &#xc;&#x14;&amp;]&#xc; &#x19;   &apos;      y2 &#x1f;&#xd;&#x16;&#x19;)Č C { E( &#xc;S &#x8; &#x17; &#x10; GN cA  &#x1e; r&#x14; Nw  /   +    n z&#x18; &#x1e;&#x2;{&#x0;  &#x1b; _&#x15; :    Ο   ty  ]h  &lt;  _&#x7; &#x1a;X; &#x16;a` D&#x4;Q&#xd; &#x1b;p  |   n&#x2;&apos;    #a ` &#xd;&#x3;   &gt;  (wp&quot;.      )S  n -P  |&#x17;f t5  2C &#xd;Ïߦ	r-: (Pp &#xf;L&#xd;
&#x4; 9 	&#x0;&#x8;g ۉ $&#x15;Y F,W( $&#x19;;A   .  &#x1; ̶g  n&#x7f;d~R ȶ  3&#x10;   浚  D&#xd;&gt;   m i&#x8;r  2B tY  Q   g&#x19; / D&#x3; z ɜ  t&#x3;   &#x18; } &#xe; 0 &#x1e; &#x1e; P&#x1d; C ZP H   s &#xd;
 &#x16; *R  .m&#xf; Y,@zF f&#x2;&#x8;3   [  &#x6;  bz &lt;8&#x5; &gt;hf Æ Ë &#xf;XM &gt; &#x2; 7    P w &#x1e; &#x6;  oX|Lƥ     &#x16;R t  @[  a Ҥ [T :&#x7;Au$   &#x18; H ^{&#x18; &#x5;H     Lh   &amp; 1 ~&#x7f;&#x1;5&#x11; ㌞ &#x8; 3&#x8;&#xd;
 &#x13; ? fU  Xo  &#x2;g } O  ; y2F  (? &#xf;$ A:[      \ &#x8;  e5: Nb:&#x14;  0+M倂     d&lt;M {7 *ws&#x10;}   &#x7;H? ) &#x6; a     &gt;&#x1d;  A&#x16;&#x19;|  · K&#x6;  I&#x16; yqH /&#xe;7~ 6&#x1a;&#x2; ?&#x1e;    m  &#xd; Ts &#x13;~7Bt  V |L &#x3;( &#x4;&#x1;&#x1c; k    p 見  k &#x3;&lt;&#x1c;     y&#xb;  G #    _V     &#xe; ay  ݓ x̚Ю  [ OL X&quot;k &#x0; q &#x17;7 z@    aր !  ׁ=&#x1e;&apos; e E4Rb)-- m&#x18;a_    &#x8;&#x2;  A&#x10;R&#x11;  Ͽ &#x13; &#xe;&#xb; &#x4; } U ;l     &#x3;   P&#x1e; -: :J&#xe;z, u  &#x1e;&#x1d;0 |s &#x1d;&#x1d;&#x8;   V 6q&#x14;   A  &lt;&#x1;&quot;	  &#xe;    &#x1e; M Z&#xe;V5&#x10;&#x0;&#x7f;AȘ   C&#x15;  8    {   &#x2;    c  &#x0;&#x1d;  &#x19;  g&#x1f;  +&#x0;چ Bm  &#x3;z} &#x19; +  L     &#x13;$&gt; ` o  = z -&#x7f;&#x14;  b &#xf;(  t m: r&#xc;   &#x1f; h &#x3;X  H &#x1a;      &apos;&#x16;  &#x7;    &#x3;i ~ &amp;j  e&#x7f;  =  	&#x1d;#  Ϊ&#x10;&gt;	 9 [~i܃4  &#x1b;s  q d# L&amp;Û)	   mJ&#x2;    &#x7; үH  ,H&#x8;&#x18;  _  |  ŽB  &#x18;,  &amp;@     EꄬD  &#x11;J &#x4; 5 :Zl!  2S  &#x15;%  &#x1d;b ?i_G    [   &#x15;&#x1f;f&#x13;   p     &quot;P&#x1a;&#xc; ? &#x1b;    MRӸ&#x19;&#x1a; qc&#x14;&#x1c;p  $ Ǧ A &#x1c;= }&#x13;Q&#x5;- ( &#x2;V&amp;  /   &#x0;  o߾&#x1d;  &#xd;
,&#x0;&#xf;LТy? &gt;  &#x5; [&quot; H  &#x7f;f T   &amp;w   p  Y #. &#x11;  e     ^    (    &#x1e;      F`}G&#x2;ȯ g&#x5; uy &#x7f;    l4 _b    &#x1f;&#x7f; _ ? :, &#xe;&#x4;&#x3;VETl v% &#x2;Gx &#x16;n  &#xd;  p&#x12; 6   &#x15;   [1~ &#x1a;&#x6;S1 Қ&#x19;;2# )j(&#xd;
CN&#x10;;{ &#x1e; gz   &#x11;$~@&#x11;r &#x7; a  qU  Gk  {   hq &#x1c;̦    j|0&#x3;5-&#x19; 8  x| &#x16; u &#xc;&#x17;HB  &#x3;8 7     &#xc;9&#x7;  &#x1; 9      ƺ!     ?&#x6;   K&#x19; 9 { ,   V&#x16;B@*ݸw&#xb;r&#x3; K V mP&#x1a;ޒ t 	 B ɋ G&#x0;  t&#x1; H B&lt;   &#xd;
 &#x8;  &#x7f; G  aR&#x7f;Y%s  &amp;i n    &#x1f;       뜢  / Qԅ@W~&#xe; 8  &#xd;
  &#x1a; l ;X AS  K  b&#x7; gnƮ &lt; &#xd;  A7    { 8&#x0;  ;&#x18;&#x14;           &#x18;M&#x1a;r &#x1f;J [   &#x7f; m Zk  b   ? &#xe;^  &#x0;F@u&#x17;K [= ݾ &#x5;   &#x3;%&#x1; &#x0;M   9     K Lrב&#x1d;~ s  bn :&#x18;  N &#x1d;  &#x7;   &#x4; 3&#x7;l 8&#x10;k&#xd;&#x1;&#x18;D %&#x0;  &#x0;$ &#x15;   L&#xc; &#x5;P3&quot;&#x1c; T&#xe;     =@: &#xf;    &#x8; &#x17;&#x1;}   &quot;      r &#x2;Q D 5  |N  9 5k&#x1a; x &#x19;VXÁo* | U  W  u(&#xe; =  H   &#xb;&#x16;+&apos;w&#xd;    t&lt;DE AN { &#x0; a: c &#x0;L &#x2; 	 z 	Z?&#x0;; ht   &#xb;&amp;   բ    ;X|m   Pv&#x10;&#x1b;sĢղ %Vg&#x1a;  &#x1b; to 1 &#xe;K 7&#x16;  r 6  O.Q&#xe;%Q  S _  0     d]  m  d&gt;l(&#x15;T&#xe;A  t\;    l  랩y&#x17;  F s&#x1;    6f  &#x6; F &apos;&#x18;   I  &lt;F &#x7f;&#x5;:{ &#x15;n&#xc;&#x1b;r&#x1c;&#x8; ٻ&#xd; 6 b u# F p &#x3;&#x0;y&#xd;
  &#xb;4 4  j$ ; H  `&#x7f;Na&#x1f; bs&#x14;  &#x1e;  &#x4;HT&#x3;  j d   B    r   NT i.8&#x7; 1    1w   hH %A&#x17;p vt     N-n&#x1b;  ~s   MEI#      1&#x19; n&#x1;   &#x1; / c  &#x1;&#x0;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Date" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">Sat, 03 Aug 2024 12:41:51 GMT</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Content-Encoding" elementType="Header">
                <stringProp name="Header.name">Content-Encoding</stringProp>
                <stringProp name="Header.value">gzip</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments">
          <collectionProp name="Arguments.arguments">
            <elementProp name="apiKey" elementType="Argument">
              <stringProp name="Argument.name">apiKey</stringProp>
              <stringProp name="Argument.value">2f7c84ad3b58051768626dc7490f7bbe</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="datadogUrl" elementType="Argument">
              <stringProp name="Argument.name">datadogUrl</stringProp>
              <stringProp name="Argument.value">https://api.datadoghq.com/api/</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="logIntakeUrl" elementType="Argument">
              <stringProp name="Argument.name">logIntakeUrl</stringProp>
              <stringProp name="Argument.value">https://http-intake.logs.datadoghq.com/v1/input/</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="metricsMaxBatchSize" elementType="Argument">
              <stringProp name="Argument.name">metricsMaxBatchSize</stringProp>
              <stringProp name="Argument.value">200</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="logsBatchSize" elementType="Argument">
              <stringProp name="Argument.name">logsBatchSize</stringProp>
              <stringProp name="Argument.value">500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sendResultsAsLogs" elementType="Argument">
              <stringProp name="Argument.name">sendResultsAsLogs</stringProp>
              <stringProp name="Argument.value">true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="includeSubresults" elementType="Argument">
              <stringProp name="Argument.name">includeSubresults</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="excludeLogsResponseCodeRegex" elementType="Argument">
              <stringProp name="Argument.name">excludeLogsResponseCodeRegex</stringProp>
              <stringProp name="Argument.value">^(200|500)$</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">.*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="customTags" elementType="Argument">
              <stringProp name="Argument.name">customTags</stringProp>
              <stringProp name="Argument.value">env:production, test_type:regression,service:api</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.datadog.jmeter.plugins.DatadogBackendClient</stringProp>
      </BackendListener>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
